[
    {
        "submission_id": "1476456084620431360",
        "user_id": "76fe259aae4db6e67e148b95136abc64702d274ea1df24db077e4b2ecb5bc04a",
        "create_at": "2021-12-30 15:32:16",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430364724135682073",
        "problem_id": "1250611789692579840",
        "skill_id": "226",
        "code": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\npublic class Main {\n    //在Main类中定义一个静态Scanner对象，这样在其它类中如果想要使用该对象进行输入，则直接\n//使用Main.input.next…即可（避免采坑）\n    public static Scanner input = new Scanner(System.in);\n    public static void main(String[] args){\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        int num = input.nextInt();\n        while(num != 0){\n            if(num < 0 || num > 4){\n                System.out.println(\"Wrong Format\");\n                System.exit(0);\n            }\n            list.add(num);\n            num = input.nextInt();\n        }\n        DealCardList dealCardList = new DealCardList(list);\n        if(!dealCardList.validate()){\n            System.out.println(\"Wrong Format\");\n            System.exit(0);\n        }\n        dealCardList.showResult();\n        input.close();\n    }\n}\n\nclass DealCardList{\n    ArrayList<Card> cardList=new ArrayList<>();\n\n    public DealCardList() {\n    }\n\n    public DealCardList(ArrayList<Integer> card) {\n        for (Integer integer : card) {\n            if (integer==0)break;\n            switch (integer){\n                case 1:\n                    Card card1=new Card(new Circle(Main.input.nextDouble()));\n                    card1.getShape().setShapeName(\"Circle\");\n                    cardList.add(card1);\n                    break;\n                case 2:\n                    Card card2=new Card(new Rectangle(Main.input.nextDouble(),Main.input.nextDouble()));\n                    card2.getShape().setShapeName(\"Rectangle\");\n                    cardList.add(card2);\n                    break;\n                case 3:\n                    Card card3=new Card(new Triangle(Main.input.nextDouble(),Main.input.nextDouble(),Main.input.nextDouble()));\n                    card3.getShape().setShapeName(\"Triangle\");\n                    cardList.add(card3);\n                    break;\n                case 4:\n                    Card card4=new Card(new Trapezoid(Main.input.nextDouble(),Main.input.nextDouble(),Main.input.nextDouble()));\n                    card4.getShape().setShapeName(\"Trapezoid\");\n                    cardList.add(card4);\n                    break;\n            }\n\n        }\n    }\n    public boolean validate(){\n        boolean ret=true;\n        for (Card card : cardList) {\n            if (!card.getShape().validate()){\n                ret=false;\n                break;\n            }\n        }\n        return ret;\n    }\n    public void cardSort(){\n        TreeSet<Card> cards = new TreeSet<>(cardList);\n        for (Card card : cards) {\n            System.out.print(card.getShape());\n        }\n    }\n    public double getAllArea(){\n        double sum=0;\n        for (Card card : cardList) {\n            sum+=card.getShape().getArea();\n        }\n        return sum;\n    }\n    public void showResult(){\n        System.out.println(\"The original list:\");\n        for (Card card : cardList) {\n            System.out.print(card.getShape());\n        }\n        System.out.println();\n        System.out.println(\"The sorted list:\");\n        cardSort();\n        System.out.println();\n        System.out.printf(\"Sum of area:%.2f\\n\",getAllArea());\n    }\n}\nclass Card implements Comparable<Card>{\n    private Shape shape;\n\n    public Card() {\n    }\n\n    public Card(Shape shape) {\n        this.shape = shape;\n    }\n\n    public Shape getShape() {\n        return shape;\n    }\n\n    public void setShape(Shape shape) {\n        this.shape = shape;\n    }\n\n    @Override\n    public int compareTo(Card card) {\n        return -(int)(shape.getArea()-card.getShape().getArea());\n    }\n}\n\nabstract class Shape{\n    private String shapeName;\n\n    public Shape() {\n    }\n\n    public Shape(String shapeName) {\n        this.shapeName = shapeName;\n    }\n\n    public String getShapeName() {\n        return shapeName;\n    }\n\n    public void setShapeName(String shapeName) {\n        this.shapeName = shapeName;\n    }\n    public abstract double getArea();\n    public abstract boolean validate();\n\n    /**\n     * 重写了toString的方法\n     * 利用Shape类的shapeName变量来表示相应的图形，\n     * 而不是用getclass方法得到类名\n     * @return\n     */\n    @Override\n    public String toString() {\n        return getShapeName()+\":\"+String.format(\"%.2f \",getArea());\n    }\n}\n\nclass Circle extends Shape{\n    private double radius;\n\n    public Circle() {\n    }\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    @Override\n    public double getArea() {\n        return Math.PI*radius*radius;\n    }\n\n    @Override\n    public boolean validate() {\n        return this.radius>0;\n    }\n}\n\nclass Rectangle extends Shape{\n    private double width,height;\n\n    public Rectangle() {\n    }\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public double getWidth() {\n        return width;\n    }\n\n    public void setWidth(double width) {\n        this.width = width;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    @Override\n    public double getArea() {\n        return height*width;\n    }\n\n    @Override\n    public boolean validate() {\n        return width>0&&height>0;\n    }\n}\n\nclass Triangle extends Shape{\n    private double side1,side2,side3;\n\n    public Triangle() {\n    }\n\n    public Triangle(double side1, double side2, double side3) {\n        this.side1 = side1;\n        this.side2 = side2;\n        this.side3 = side3;\n    }\n\n    @Override\n    public double getArea() {\n        double p=(side1+side2+side3)/2;\n        return Math.sqrt(p*(p-side1)*(p-side2)*(p-side3));\n    }\n\n    @Override\n    public boolean validate() {\n        boolean ret=true;\n        if (!(side1>0&&side3>0&&side2>0))ret=false;\n        else{\n            if (!(side1+side2>side3&&side1+side3>side2&&side2+side3>side1))ret=false;\n        }\n        return ret;\n    }\n}\n\nclass Trapezoid extends Shape{\n    private double topSide,bottomSide,height;\n\n    public Trapezoid() {\n    }\n\n    public Trapezoid(double topSide, double bottomSide, double height) {\n        this.topSide = topSide;\n        this.bottomSide = bottomSide;\n        this.height = height;\n    }\n\n    @Override\n    public double getArea() {\n        return (topSide+bottomSide)*height/2;\n    }\n\n    @Override\n    public boolean validate() {\n        return topSide>0&&height>0&&bottomSide>0;\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "1161",
        "memory_consume": "20068"
    },
    {
        "submission_id": "1477216548242976768",
        "user_id": "3206bb58dda8c552fc372555fc405f471a1bc56fbe0fe5f79ba6dccc845defb8",
        "create_at": "2022-01-01 17:54:05",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1430364724135682056",
        "problem_id": "5830",
        "skill_id": "215",
        "code": "public class Main {\n    public Main(){\n        System.out.println(\"构造方法一被调用了\");\n    }\n    public Main(int x){\n        this();\t\t//调用Main()\n        System.out.println(\"构造方法二被调用了\");\n    }\n    public Main(boolean b){\n        this(1);\t//调用Main(int x)\n        System.out.println(\"构造方法三被调用了\");\n    }\n    public static void main(String[] args) {\n        Main a = new Main(true);\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "78",
        "memory_consume": "13152"
    },
    {
        "submission_id": "1477216750689447936",
        "user_id": "3206bb58dda8c552fc372555fc405f471a1bc56fbe0fe5f79ba6dccc845defb8",
        "create_at": "2022-01-01 17:54:53",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430364724135682061",
        "problem_id": "1057838322939097088",
        "skill_id": "215",
        "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner in=new Scanner(System.in);\n\t\tint r=in.nextInt();\n\t\tint h=in.nextInt();\n\t\tCylinder c1=new Cylinder(r,h);\n\t\tSystem.out.println(c1.getVolumn());\n\t\tCylinder c2=new Cylinder();\n\t\tSystem.out.println(c2.getVolumn());\n\t}\n}\nclass Cylinder{\n\tprivate int radius,height ;\n\tpublic Cylinder(int radius,int height){\n\t\tthis.height=height;\n\t\tthis.radius=radius;\n\t\tSystem.out.println(\"Constructor with para\");\n\t}\n\tpublic Cylinder() {\n\t\tthis.radius=2;\n\t\tthis.height=1;\n        System.out.println(\"Constructor with para\");\n\t\tSystem.out.println(\"Constructor no para\");\n\t}\n\tpublic int getVolumn(){\n\t\treturn (int) (Math.PI*radius*radius*height);\n\t}\n\tpublic int getRadius() {\n\t\treturn radius;\n\t}\n\tpublic void setRadius(int radius) {\n\t\tthis.radius = radius;\n\t}\n\tpublic int getHeight() {\n\t\treturn height;\n\t}\n\tpublic void setHeight(int height) {\n\t\tthis.height = height;\n\t}\n}",
        "response": "ACCEPTED",
        "time_consume": "114",
        "memory_consume": "15404"
    },
    {
        "submission_id": "1477217189768847360",
        "user_id": "3206bb58dda8c552fc372555fc405f471a1bc56fbe0fe5f79ba6dccc845defb8",
        "create_at": "2022-01-01 17:56:38",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430364724135682073",
        "problem_id": "1250611789692579840",
        "skill_id": "226",
        "code": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\npublic class Main {\n    public static Scanner input = new Scanner(System.in);\n    public static void main(String[] args){\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        int num = input.nextInt();\n        while(num != 0){\n            if(num < 0 || num > 4){\n                System.out.println(\"Wrong Format\");\n                System.exit(0);\n            }\n            list.add(num);\n            num = input.nextInt();\n        }\n        DealCardList dealCardList = new DealCardList(list);\n        if(!dealCardList.validate()){\n            System.out.println(\"Wrong Format\");\n            System.exit(0);\n        }\n        dealCardList.showResult();\n        input.close();\n    }\n}\n\nclass DealCardList{\n    ArrayList<Card> cardList=new ArrayList<>();\n\n    public DealCardList() {\n    }\n\n    public DealCardList(ArrayList<Integer> card) {\n        for (Integer integer : card) {\n            if (integer==0)break;\n            switch (integer){\n                case 1:\n                    Card card1=new Card(new Circle(Main.input.nextDouble()));\n                    card1.getShape().setShapeName(\"Circle\");\n                    cardList.add(card1);\n                    break;\n                case 2:\n                    Card card2=new Card(new Rectangle(Main.input.nextDouble(),Main.input.nextDouble()));\n                    card2.getShape().setShapeName(\"Rectangle\");\n                    cardList.add(card2);\n                    break;\n                case 3:\n                    Card card3=new Card(new Triangle(Main.input.nextDouble(),Main.input.nextDouble(),Main.input.nextDouble()));\n                    card3.getShape().setShapeName(\"Triangle\");\n                    cardList.add(card3);\n                    break;\n                case 4:\n                    Card card4=new Card(new Trapezoid(Main.input.nextDouble(),Main.input.nextDouble(),Main.input.nextDouble()));\n                    card4.getShape().setShapeName(\"Trapezoid\");\n                    cardList.add(card4);\n                    break;\n            }\n\n        }\n    }\n    public boolean validate(){\n        boolean ret=true;\n        for (Card card : cardList) {\n            if (!card.getShape().validate()){\n                ret=false;\n                break;\n            }\n        }\n        return ret;\n    }\n    public void cardSort(){\n        TreeSet<Card> cards = new TreeSet<>(cardList);\n        for (Card card : cards) {\n            System.out.print(card.getShape());\n        }\n    }\n    public double getAllArea(){\n        double sum=0;\n        for (Card card : cardList) {\n            sum+=card.getShape().getArea();\n        }\n        return sum;\n    }\n    public void showResult(){\n        System.out.println(\"The original list:\");\n        for (Card card : cardList) {\n            System.out.print(card.getShape());\n        }\n        System.out.println();\n        System.out.println(\"The sorted list:\");\n        cardSort();\n        System.out.println();\n        System.out.printf(\"Sum of area:%.2f\\n\",getAllArea());\n    }\n}\nclass Card implements Comparable<Card>{\n    private Shape shape;\n\n    public Card() {\n    }\n\n    public Card(Shape shape) {\n        this.shape = shape;\n    }\n\n    public Shape getShape() {\n        return shape;\n    }\n\n    public void setShape(Shape shape) {\n        this.shape = shape;\n    }\n\n    @Override\n    public int compareTo(Card card) {\n        return -(int)(shape.getArea()-card.getShape().getArea());\n    }\n}\n\nabstract class Shape{\n    private String shapeName;\n\n    public Shape() {\n    }\n\n    public Shape(String shapeName) {\n        this.shapeName = shapeName;\n    }\n\n    public String getShapeName() {\n        return shapeName;\n    }\n\n    public void setShapeName(String shapeName) {\n        this.shapeName = shapeName;\n    }\n    public abstract double getArea();\n    public abstract boolean validate();\n\n    /**\n     * 重写了toString的方法\n     * 利用Shape类的shapeName变量来表示相应的图形，\n     * 而不是用getclass方法得到类名\n     * @return\n     */\n    @Override\n    public String toString() {\n        return getShapeName()+\":\"+String.format(\"%.2f \",getArea());\n    }\n}\n\nclass Circle extends Shape{\n    private double radius;\n\n    public Circle() {\n    }\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    @Override\n    public double getArea() {\n        return Math.PI*radius*radius;\n    }\n\n    @Override\n    public boolean validate() {\n        return this.radius>0;\n    }\n}\n\nclass Rectangle extends Shape{\n    private double width,height;\n\n    public Rectangle() {\n    }\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public double getWidth() {\n        return width;\n    }\n\n    public void setWidth(double width) {\n        this.width = width;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    @Override\n    public double getArea() {\n        return height*width;\n    }\n\n    @Override\n    public boolean validate() {\n        return width>0&&height>0;\n    }\n}\n\nclass Triangle extends Shape{\n    private double side1,side2,side3;\n\n    public Triangle() {\n    }\n\n    public Triangle(double side1, double side2, double side3) {\n        this.side1 = side1;\n        this.side2 = side2;\n        this.side3 = side3;\n    }\n\n    @Override\n    public double getArea() {\n        double p=(side1+side2+side3)/2;\n        return Math.sqrt(p*(p-side1)*(p-side2)*(p-side3));\n    }\n\n    @Override\n    public boolean validate() {\n        boolean ret=true;\n        if (!(side1>0&&side3>0&&side2>0))ret=false;\n        else{\n            if (!(side1+side2>side3&&side1+side3>side2&&side2+side3>side1))ret=false;\n        }\n        return ret;\n    }\n}\nclass Trapezoid extends Shape{\n    private double topSide,bottomSide,height;\n    public Trapezoid() {}\n    public Trapezoid(double topSide, double bottomSide, double height) {\n        this.topSide = topSide;\n        this.bottomSide = bottomSide;\n        this.height = height;\n    }\n    public double getArea() {\n        return (topSide+bottomSide)*height/2;\n    }\n    public boolean validate() {\n        return topSide>0&&height>0&&bottomSide>0;\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "1065",
        "memory_consume": "20288"
    },
    {
        "submission_id": "1477217417506971648",
        "user_id": "3206bb58dda8c552fc372555fc405f471a1bc56fbe0fe5f79ba6dccc845defb8",
        "create_at": "2022-01-01 17:57:32",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430364724135682080",
        "problem_id": "1318913484051648512",
        "skill_id": "1077593675617677312",
        "code": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int num = scanner.nextInt();//数组长度\n        Person person[] = new Person[num];\n        for(int i=0;i<num;i++) person[i] = new Person(scanner.next(),scanner.nextInt()); //输入\n        String name = scanner.next();//需要检测的姓名\n        boolean flag = false;//该姓名是否已存在\n        int index=0;//标记对应的下标\n        for(int i=0;i<num;i++){//检测并输出信息\n            if(person[i].getName().equals(name)){//符合该姓名时\n                flag = true;\n                index = i;\n            }\n            System.out.println(person[i].toString());//输出信息\n        }\n        if(flag){//找到时\n            System.out.println(\"查询结果：\");\n            System.out.println(person[index].toString());//输出信息\n        }\n        else System.out.println(\"not found\");\n    }\n}\nclass Person{\n    private String name;\n    private int age;\n    public Person(String name,int age){ //构造方法\n        this.name = name;\n        this.age = age;\n    }\n    public Person(){ //构造方法\n        this.name = \"none\";\n        this.age = 1;\n    }\n    public String toString(){ //题目所给方法，无需变更\n        return \"Person [name=\" + name + \", age=\" + age + \"]\";\n    }\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "221",
        "memory_consume": "15412"
    },
    {
        "submission_id": "1477978758907678720",
        "user_id": "3de9071e891e0e21ee5045e4a723f59fbe0d99bc5fb9a88a6308565bf977dbf4",
        "create_at": "2022-01-03 20:22:50",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430364724135682048",
        "problem_id": "1383639519970201600",
        "skill_id": "215",
        "code": "import java.util.Scanner;\nclass Circle{\n    private int radius;\n    public Circle(){\n        radius=2;\n        System.out.println(\"This is a constructor with no para.\");\n    }\n    public Circle(int r){\n        if(r<=0) radius=2;\n        else radius=r;\n        System.out.println(\"This is a constructor with para.\");\n    }\n    public void setter(int r){\n        if(r<=0) radius=2;\n        else radius=r;\n    }\n    public int getter(){\n        return radius;\n    }\n    public float getArea(){\n        double A=radius*radius*Math.PI;\n        return (float)((Math.round(A * 100)) / 100.0);\n         \n    }\n    public String toString(){\n        return \"Circle [radius=\" + radius + \"]\";\n    }\n}\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner in = new Scanner(System.in);\n        Circle c1 = new Circle();\n        System.out.println(c1.toString());\n        System.out.println(c1.getArea());\n        Circle c2 = new Circle();\n        System.out.println(c2.toString());\n        System.out.println(c2.getArea());\n        c2.setter(in.nextInt());\n        System.out.println(c2.toString());\n        System.out.println(c2.getArea());\n        Circle c3 = new Circle(in.nextInt());\n        System.out.println(c3.toString());\n        System.out.print(+c3.getArea());\n    }\n}\n\n",
        "response": "ACCEPTED",
        "time_consume": "250",
        "memory_consume": "15336"
    },
    {
        "submission_id": "1477979512380772352",
        "user_id": "3de9071e891e0e21ee5045e4a723f59fbe0d99bc5fb9a88a6308565bf977dbf4",
        "create_at": "2022-01-03 20:25:49",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430364724135682061",
        "problem_id": "1057838322939097088",
        "skill_id": "215",
        "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String[] args) {\n\t\tScanner in=new Scanner(System.in);\n\t\tint r=in.nextInt();\n\t\tint h=in.nextInt();\n\t\tCylinder c1=new Cylinder(r,h);\n\t\tSystem.out.println(c1.getVolumn());\n\t\tCylinder c2=new Cylinder();\n\t\tSystem.out.println(c2.getVolumn());\n\t}\n}\nclass Cylinder{\n\tprivate int radius,height ;\n\tpublic Cylinder(int radius,int height){\n\t\tthis.height=height;\n\t\tthis.radius=radius;\n\t\tSystem.out.println(\"Constructor with para\");\n\t}\n\tpublic Cylinder() {\n\t\tthis.radius=2;\n\t\tthis.height=1;\n        System.out.println(\"Constructor with para\");\n\t\tSystem.out.println(\"Constructor no para\");\n\t}\n\tpublic int getVolumn(){\n\t\treturn (int) (Math.PI*radius*radius*height);\n\t}\n\tpublic int getRadius() {\n\t\treturn radius;\n\t}\n\tpublic void setRadius(int radius) {\n\t\tthis.radius = radius;\n\t}\n\tpublic int getHeight() {\n\t\treturn height;\n\t}\n\tpublic void setHeight(int height) {\n\t\tthis.height = height;\n\t}\n}",
        "response": "ACCEPTED",
        "time_consume": "124",
        "memory_consume": "15224"
    },
    {
        "submission_id": "1469321747521261568",
        "user_id": "3206bb58dda8c552fc372555fc405f471a1bc56fbe0fe5f79ba6dccc845defb8",
        "create_at": "2021-12-10 23:02:57",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430365375414566925",
        "problem_id": "1247389962455629824",
        "skill_id": "222",
        "code": "\nimport java.util.Scanner;\nclass Circle {\nprivate double radius;\n    public Circle(){radius=0;}\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n   public double getArea(){\n        return Math.pow(radius,2)*3.1415926f;\n    }\n    public double getPerimeter(){\n        return 2*radius*3.1415926f;\n    }\n    public String toString( ){\n        return \"Circle(r:\"+this.radius+\")\";\n    }\n}\n\nclass Cylinder extends Circle{\nprivate double height;\nprivate Circle circle;\n\n    public Cylinder(double height, Circle circle) {\n        this.height = height;\n        this.circle = circle;\n    }\n    public Cylinder(){this.height=0;}\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    public void setCircle(Circle circle) {\n        this.circle = circle;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public Circle getCircle() {\n        return circle;\n    }\n    public double getArea(){\n        return height*circle.getPerimeter()+circle.getArea()*2;\n    }\n    public double getVolume(){\n        return circle.getArea()*height;\n    }\n    public String toString( ){\n       return  \"Cylinder(h:\"+this.height+\",\"+this.circle.toString()+\")\";\n    }\n}\npublic class Main{\n    public static void main(String args[]) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        for(int i = 0; i < n; i++) {\n            String str = input.next();\n            if(str.equals(\"Circle\")) {\n                Circle c = new Circle(input.nextDouble());\n                System.out.println(\"The area of \" + c.toString() + \" is \" + String.format(\"%.2f\",c.getArea()));\n                System.out.println(\"The perimeterof \" + c.toString() + \" is \"+ String.format(\"%.2f\",c.getPerimeter()));\n            } else if(str.equals(\"Cylinder\")) {\n                Cylinder r = new Cylinder(input.nextDouble(), new Circle(input.nextDouble()));\n                System.out.println(\"The area of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getArea()));\n                System.out.println(\"The volume of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getVolume()));\n            }\n        }\n        input.close();\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "142",
        "memory_consume": "19844"
    },
    {
        "submission_id": "1471463169426903040",
        "user_id": "76fe259aae4db6e67e148b95136abc64702d274ea1df24db077e4b2ecb5bc04a",
        "create_at": "2021-12-16 20:52:12",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430365375414566925",
        "problem_id": "1247389962455629824",
        "skill_id": "222",
        "code": "\nimport java.util.Scanner;\nclass Circle {\nprivate double radius;\n    public Circle(){radius=0;}\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n   public double getArea(){\n        return Math.pow(radius,2)*3.1415926f;\n    }\n    public double getPerimeter(){\n        return 2*radius*3.1415926f;\n    }\n    public String toString( ){\n        return \"Circle(r:\"+this.radius+\")\";\n    }\n}\n\nclass Cylinder extends Circle{\nprivate double height;\nprivate Circle circle;\n\n    public Cylinder(double height, Circle circle) {\n        this.height = height;\n        this.circle = circle;\n    }\n    public Cylinder(){this.height=0;}\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    public void setCircle(Circle circle) {\n        this.circle = circle;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public Circle getCircle() {\n        return circle;\n    }\n    public double getArea(){\n        return height*circle.getPerimeter()+circle.getArea()*2;\n    }\n    public double getVolume(){\n        return circle.getArea()*height;\n    }\n    public String toString( ){\n       return  \"Cylinder(h:\"+this.height+\",\"+this.circle.toString()+\")\";\n    }\n}\npublic class Main{\n    public static void main(String args[]) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        for(int i = 0; i < n; i++) {\n            String str = input.next();\n            if(str.equals(\"Circle\")) {\n                Circle c = new Circle(input.nextDouble());\n                System.out.println(\"The area of \" + c.toString() + \" is \" + String.format(\"%.2f\",c.getArea()));\n                System.out.println(\"The perimeterof \" + c.toString() + \" is \"+ String.format(\"%.2f\",c.getPerimeter()));\n            } else if(str.equals(\"Cylinder\")) {\n                Cylinder r = new Cylinder(input.nextDouble(), new Circle(input.nextDouble()));\n                System.out.println(\"The area of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getArea()));\n                System.out.println(\"The volume of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getVolume()));\n            }\n        }\n        input.close();\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "143",
        "memory_consume": "19432"
    },
    {
        "submission_id": "1472924430626967552",
        "user_id": "501560f3eddad620d1176ad27620e78449390a2a1fdc85fa6ba34873ceb1e286",
        "create_at": "2021-12-20 21:38:44",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430365375414566925",
        "problem_id": "1247389962455629824",
        "skill_id": "222",
        "code": "\nimport java.util.Scanner;\nclass Circle {\nprivate double radius;\n    public Circle(){radius=0;}\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n   public double getArea(){\n        return Math.pow(radius,2)*3.1415926f;\n    }\n    public double getPerimeter(){\n        return 2*radius*3.1415926f;\n    }\n    public String toString( ){\n        return \"Circle(r:\"+this.radius+\")\";\n    }\n}\n\nclass Cylinder extends Circle{\nprivate double height;\nprivate Circle circle;\n\n    public Cylinder(double height, Circle circle) {\n        this.height = height;\n        this.circle = circle;\n    }\n    public Cylinder(){this.height=0;}\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    public void setCircle(Circle circle) {\n        this.circle = circle;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public Circle getCircle() {\n        return circle;\n    }\n    public double getArea(){\n        return height*circle.getPerimeter()+circle.getArea()*2;\n    }\n    public double getVolume(){\n        return circle.getArea()*height;\n    }\n    public String toString( ){\n       return  \"Cylinder(h:\"+this.height+\",\"+this.circle.toString()+\")\";\n    }\n}\npublic class Main{\n    public static void main(String args[]) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        for(int i = 0; i < n; i++) {\n            String str = input.next();\n            if(str.equals(\"Circle\")) {\n                Circle c = new Circle(input.nextDouble());\n                System.out.println(\"The area of \" + c.toString() + \" is \" + String.format(\"%.2f\",c.getArea()));\n                System.out.println(\"The perimeterof \" + c.toString() + \" is \"+ String.format(\"%.2f\",c.getPerimeter()));\n            } else if(str.equals(\"Cylinder\")) {\n                Cylinder r = new Cylinder(input.nextDouble(), new Circle(input.nextDouble()));\n                System.out.println(\"The area of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getArea()));\n                System.out.println(\"The volume of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getVolume()));\n            }\n        }\n        input.close();\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "146",
        "memory_consume": "19116"
    },
    {
        "submission_id": "1473931791694426112",
        "user_id": "7103cb343a31c9a7c29014e7a9512a81047123301a6dd28c631d23671d34e450",
        "create_at": "2021-12-23 16:21:38",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430365375414566925",
        "problem_id": "1247389962455629824",
        "skill_id": "222",
        "code": "import java.util.Scanner;\n\npublic class Main{\n    public static void main(String args[]) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        for(int i = 0; i < n; i++) {\n            String str = input.next();\n            if(str.equals(\"Circle\")) {\n                Circle c = new Circle(input.nextDouble());\n                System.out.println(\"The area of \" + c.toString() + \" is \" + String.format(\"%.2f\",c.getArea()));\n                System.out.println(\"The perimeterof \" + c.toString() + \" is \"+ String.format(\"%.2f\",c.getPerimeter()));\n            } else if(str.equals(\"Cylinder\")) {\n                Cylinder r = new Cylinder(input.nextDouble(), new Circle(input.nextDouble()));\n                System.out.println(\"The area of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getArea()));\n                System.out.println(\"The volume of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getVolume()));\n            }\n        }\n    }\n}\nclass Circle {\n    private double redius;\n\n    public Circle() {\n        this(0);\n    }\n\n    public Circle(double redius) {\n        this.redius = redius;\n    }\n\n    public double getRedius() {\n        return redius;\n    }\n\n    public void setRedius(double redius) {\n        this.redius = redius;\n    }\n\n    public double getArea() {\n        return Math.PI * redius * redius;\n    }\n    public double getPerimeter() {\n        return Math.PI * redius * 2;\n    }\n\n    // TODO: 2021/11/14\n\n    @Override\n    public String toString() {\n        return \"Circle(\" +\n                \"r:\" + redius +\n                ')';\n    }\n}\n\nclass Cylinder extends Circle{\n    private double height;\n    private Circle circle;\n\n    public Cylinder() {\n        this.height = 0;\n        circle.setRedius(0);\n    }\n\n    public Cylinder(double height, Circle circle) {\n        this.height = height;\n        this.circle = circle;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    public Circle getCircle() {\n        return circle;\n    }\n\n    public void setCircle(Circle circle) {\n        this.circle = circle;\n    }\n\n    @Override\n    public double getArea() {\n        return circle.getArea() * 2 + circle.getPerimeter() * this.height;\n    }\n\n    public double getVolume() {\n        return circle.getArea() * height;\n    }\n\n    @Override\n    public String toString() {\n        return \"Cylinder(\" +\n                \"h:\" + height +\n                \",\" + circle +\n                \")\";\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "153",
        "memory_consume": "18636"
    },
    {
        "submission_id": "1474302228285480960",
        "user_id": "60a28857d3cfe54f18ad279faf799b10c17bca3c7d84d3288b21b05f7301258e",
        "create_at": "2021-12-24 16:53:37",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430365375414566925",
        "problem_id": "1247389962455629824",
        "skill_id": "222",
        "code": "import java.util.*;\n\n\tclass Circle{\n\t\tprivate double radius;\n\t\tpublic Circle (double radius) {\n\t\t\tthis.radius=radius;\n\t\t}\n\t\tpublic Circle() {\n\t\t\tthis.radius=0;\n\t\t}\n\t\tpublic double getRadius() {\n\t\t\treturn radius;\n\t\t}\n\t\tpublic void setRadius(double radius) {\n\t\t\tthis.radius = radius;\n\t\t}\n\t\tpublic double getArea() {\n\t\t\treturn Math.PI*radius*radius;\n\t\t}\n\t\tpublic double getPerimeter() {\n\t\t\treturn 2*Math.PI*radius;\n\t\t}\n\t\tpublic String toString() {\n\t\t\treturn \"Circle(r:\"+radius+\")\";\n\t\t}\n\t\n\t}\n\tclass Cylinder{\n\t\tprivate double height;\n\t\tprivate Circle circle;\n\t\tpublic Cylinder(double height,Circle circle) {\n\t\t\tthis.height=height;\n\t\t\tthis.circle=circle;\n\t\t}\n\t\tpublic Cylinder() {\n\t\t\tthis.height=0;\n\t\t\tthis.circle.setRadius(0);\n\t\t}\n\t\tpublic double getHeight() {\n\t\t\treturn height;\n\t\t}\n\t\tpublic void setHeight(double height) {\n\t\t\tthis.height = height;\n\t\t}\n\t\tpublic Circle getCircle() {\n\t\t\treturn circle;\n\t\t}\n\t\tpublic void setCircle(Circle circle) {\n\t\t\tthis.circle = circle;\n\t\t}\n\t\tpublic double getArea() {\n\t\t\treturn circle.getArea()*2+circle.getPerimeter()*height;\n\t\t}\n\t\tpublic double getVolume() {\n\t\t\treturn circle.getArea()*height;\n\t\t}\n\t\tpublic String toString() {\n\t\t\treturn \"Cylinder(h:\"+height+\",\"+\"Circle(r:\"+circle.getRadius()+\"))\";\n\t\t}\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic class Main{\n\t    public static void main(String args[]) {\n\t        Scanner input = new Scanner(System.in);\n\t        int n = input.nextInt();\n\t        for(int i = 0; i < n; i++) {\n\t            String str = input.next();\n\t            if(str.equals(\"Circle\")) {\n\t                Circle c = new Circle(input.nextDouble());\n\t                System.out.println(\"The area of \" + c.toString() + \" is \" + String.format(\"%.2f\",c.getArea()));\n\t                System.out.println(\"The perimeterof \" + c.toString() + \" is \"+ String.format(\"%.2f\",c.getPerimeter()));\n\t            } else if(str.equals(\"Cylinder\")) {\n\t                Cylinder r = new Cylinder(input.nextDouble(), new Circle(input.nextDouble()));\n\t                System.out.println(\"The area of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getArea()));\n\t                System.out.println(\"The volume of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getVolume()));\n\t            }\n\t        }\n\t    }\n\t}",
        "response": "ACCEPTED",
        "time_consume": "131",
        "memory_consume": "16872"
    },
    {
        "submission_id": "1475816329562017792",
        "user_id": "ced0774d4980be3b53706d6514b137eb6ccd4c786ea4434a6857c12d58228578",
        "create_at": "2021-12-28 21:10:06",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430365375414566925",
        "problem_id": "1247389962455629824",
        "skill_id": "222",
        "code": "\nimport java.util.Scanner;\nclass Circle {\nprivate double radius;\n    public Circle(){radius=0;}\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n   public double getArea(){\n        return Math.pow(radius,2)*3.1415926f;\n    }\n    public double getPerimeter(){\n        return 2*radius*3.1415926f;\n    }\n    public String toString( ){\n        return \"Circle(r:\"+this.radius+\")\";\n    }\n}\n\nclass Cylinder extends Circle{\nprivate double height;\nprivate Circle circle;\n\n    public Cylinder(double height, Circle circle) {\n        this.height = height;\n        this.circle = circle;\n    }\n    public Cylinder(){this.height=0;}\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    public void setCircle(Circle circle) {\n        this.circle = circle;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public Circle getCircle() {\n        return circle;\n    }\n    public double getArea(){\n        return height*circle.getPerimeter()+circle.getArea()*2;\n    }\n    public double getVolume(){\n        return circle.getArea()*height;\n    }\n    public String toString( ){\n       return  \"Cylinder(h:\"+this.height+\",\"+this.circle.toString()+\")\";\n    }\n}\npublic class Main{\n    public static void main(String args[]) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        for(int i = 0; i < n; i++) {\n            String str = input.next();\n            if(str.equals(\"Circle\")) {\n                Circle c = new Circle(input.nextDouble());\n                System.out.println(\"The area of \" + c.toString() + \" is \" + String.format(\"%.2f\",c.getArea()));\n                System.out.println(\"The perimeterof \" + c.toString() + \" is \"+ String.format(\"%.2f\",c.getPerimeter()));\n            } else if(str.equals(\"Cylinder\")) {\n                Cylinder r = new Cylinder(input.nextDouble(), new Circle(input.nextDouble()));\n                System.out.println(\"The area of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getArea()));\n                System.out.println(\"The volume of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getVolume()));\n            }\n        }\n        input.close();\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "148",
        "memory_consume": "19808"
    },
    {
        "submission_id": "1478723666870394880",
        "user_id": "8204d734356d831232cfaab9910b3aaf4e17a57e59ddb2a29dacf4b21a7ca408",
        "create_at": "2022-01-05 21:42:50",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430365375414566925",
        "problem_id": "1247389962455629824",
        "skill_id": "222",
        "code": "\nimport java.util.Scanner;\nclass Circle {\nprivate double radius;\n    public Circle(){radius=0;}\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n   public double getArea(){\n        return Math.pow(radius,2)*3.1415926f;\n    }\n    public double getPerimeter(){\n        return 2*radius*3.1415926f;\n    }\n    public String toString( ){\n        return \"Circle(r:\"+this.radius+\")\";\n    }\n}\n\nclass Cylinder extends Circle{\nprivate double height;\nprivate Circle circle;\n\n    public Cylinder(double height, Circle circle) {\n        this.height = height;\n        this.circle = circle;\n    }\n    public Cylinder(){this.height=0;}\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    public void setCircle(Circle circle) {\n        this.circle = circle;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public Circle getCircle() {\n        return circle;\n    }\n    public double getArea(){\n        return height*circle.getPerimeter()+circle.getArea()*2;\n    }\n    public double getVolume(){\n        return circle.getArea()*height;\n    }\n    public String toString( ){\n       return  \"Cylinder(h:\"+this.height+\",\"+this.circle.toString()+\")\";\n    }\n}\npublic class Main{\n    public static void main(String args[]) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        for(int i = 0; i < n; i++) {\n            String str = input.next();\n            if(str.equals(\"Circle\")) {\n                Circle c = new Circle(input.nextDouble());\n                System.out.println(\"The area of \" + c.toString() + \" is \" + String.format(\"%.2f\",c.getArea()));\n                System.out.println(\"The perimeterof \" + c.toString() + \" is \"+ String.format(\"%.2f\",c.getPerimeter()));\n            } else if(str.equals(\"Cylinder\")) {\n                Cylinder r = new Cylinder(input.nextDouble(), new Circle(input.nextDouble()));\n                System.out.println(\"The area of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getArea()));\n                System.out.println(\"The volume of \" + r.toString() + \" is \" + String.format(\"%.2f\",r.getVolume()));\n            }\n        }\n        input.close();\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "145",
        "memory_consume": "19372"
    },
    {
        "submission_id": "1516252103705370624",
        "user_id": "bc393605090ecd8823d99fa88623bb32229eda0f86ba7b8c2473150ac1684ae5",
        "create_at": "2022-04-19 11:07:26",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1514044981407805472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\n \nclass Student{\n    private String name;\n    private String sex;\n    private int age;\n \n    @Override\n    public String toString() {\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\n        return str;\n    }\n \n    public Student(String name, String sex, int age) {\n        this.name = name;\n        this.sex = sex;\n        this.age = age;\n    }\n \n    public Student() {\n    }\n \n    public String getName() {\n        return name;\n    }\n \n    public void setName(String name) {\n        this.name = name;\n    }\n \n    public String getSex() {\n        return sex;\n    }\n \n    public void setSex(String sex) {\n        this.sex = sex;\n    }\n \n    public int getAge() {\n        return age;\n    }\n \n    public void setAge(int age) {\n        this.age = age;\n    }\n}\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        String name=sc.next();\n        int age=Integer.valueOf(sc.next());\n        String sx=sc.next();\n        Student student = new Student(name, sx, age);\n        System.out.println(student);\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "234",
        "memory_consume": "18716"
    },
    {
        "submission_id": "1516254157689053184",
        "user_id": "bc393605090ecd8823d99fa88623bb32229eda0f86ba7b8c2473150ac1684ae5",
        "create_at": "2022-04-19 11:15:36",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1514044981407805462",
        "problem_id": "5830",
        "skill_id": "215",
        "code": "public class Main {\n    public Main(){\n        System.out.println(\"构造方法一被调用了\");\n    }\n    public Main(int x){\n        this();\n        System.out.println(\"构造方法二被调用了\");\n    }\n    public Main(boolean b){\n        this(1);\n        System.out.println(\"构造方法三被调用了\");\n    }\n    public static void main(String[] args) {\n        Main x=new Main(false);\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "82",
        "memory_consume": "13144"
    },
    {
        "submission_id": "1521397467344584704",
        "user_id": "798f071be683ce53edd99ad1c410208dd79483bf836d208e40a058228a60fe1c",
        "create_at": "2022-05-03 15:53:17",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1514044981407805462",
        "problem_id": "5830",
        "skill_id": "215",
        "code": "public class Main {\n    public Main(){\n        System.out.println(\"构造方法一被调用了\");\n    }\n    public Main(int x){\n        this();\n        System.out.println(\"构造方法二被调用了\");\n    }\n    public Main(boolean b){\n        this(1);\n        System.out.println(\"构造方法三被调用了\");\n    }\n    public static void main(String[] args) {\n        Main a = new Main(true);\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "80",
        "memory_consume": "13388"
    },
    {
        "submission_id": "1521401387777310720",
        "user_id": "798f071be683ce53edd99ad1c410208dd79483bf836d208e40a058228a60fe1c",
        "create_at": "2022-05-03 16:08:51",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1514044981407805472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\nclass Student{\n    private String name;\n    private String sex;\n    private int age;\n    @Override\n    public String toString() {\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\n        return str;\n    }\n    public Student(String name, String sex, int age) {\n        this.name = name;\n        this.sex = sex;\n        this.age = age;\n    }\n    public Student() {\n    }\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n    public String getSex() {\n        return sex;\n    }\n    public void setSex(String sex) {\n        this.sex = sex;\n    }\n    public int getAge() {\n        return age;\n    }\n    public void setAge(int ag) {\n        this.age = age;\n    }\n}\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        String name=sc.next();\n        int age=Integer.valueOf(sc.next());\n        String sx=sc.next();\n        Student student = new Student(name, sx, age);\n        System.out.println(student);\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "220",
        "memory_consume": "15580"
    },
    {
        "submission_id": "1521402642255884288",
        "user_id": "798f071be683ce53edd99ad1c410208dd79483bf836d208e40a058228a60fe1c",
        "create_at": "2022-05-03 16:13:50",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1514044981407805482",
        "problem_id": "6918",
        "skill_id": "218",
        "code": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n                Scanner in = new Scanner(System.in);\n                int a,b,c,d,e;\n                a = in.nextInt();\n                b = in.nextInt();\n                c = in.nextInt();\n                d = in.nextInt();\n                e = in.nextInt();\n                RR rr = new RR();\n                double dd = rr.fun(a,b,c,d,e);\n                System.out.printf(\"%.2f\",dd);\n    }\n}\nclass RR\n{\n    double fun(int a,int b,int c,int d,int e)\n    {\n        return (a+b+c+d+e)/5.0;\n    }\n\n}\n",
        "response": "ACCEPTED",
        "time_consume": "114",
        "memory_consume": "15344"
    },
    {
        "submission_id": "1522189604902453248",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-05-05 20:20:57",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1514044981407805583",
        "problem_id": "1318913484051648512",
        "skill_id": "1077593675617677312",
        "code": "import java.util.Scanner;\n\nclass Person {\n\tprivate String name;\n\tprivate int age;\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\n\tpublic Person() {\n\t\tthis.setName(\"none\");\n\t\tthis.setAge(1);\n\t}\n\n\tpublic Person(String name, int age) {\n\t\tthis.setName(name);\n\t\tthis.setAge(age);\n\t}\n\n\tpublic String toString() {\n\t\treturn \"Person [name=\" + name + \", age=\" + age + \"]\";\n\t}\n\n}\n\nclass Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tPerson[] pp = new Person[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tpp[i] = new Person(sc.next(), sc.nextInt());\n\t\t}\n\t\tString fid = sc.next();\n\t\tint flag = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tSystem.out.println(pp[i].toString());\n\t\t\tif (pp[i].getName().equals(fid) == true) {\n\t\t\t\tflag = 1;\n\t\t\t\tSystem.out.println(\"查询结果：\");\n\t\t\t\tSystem.out.println(pp[i].toString());\n\t\t\t}\n\t\t}\n\t\tif (flag == 0)\n\t\t\tSystem.out.println(\"not found\");\n\t\tsc.close();\n\t}\n}\n",
        "response": "ACCEPTED",
        "time_consume": "234",
        "memory_consume": "15236"
    },
    {
        "submission_id": "1522199488066781184",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-05-05 21:00:13",
        "language": "Java",
        "score": "40.0",
        "problem_set_problem_id": "1514044981407805559",
        "problem_id": "1250611789692579840",
        "skill_id": "226",
        "code": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\npublic class Main {\n\n    public static Scanner input = new Scanner(System.in);\n    public static void main(String[] args){\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        int num = input.nextInt();\n        while(num != 0){\n            if(num < 0 || num > 4){\n                System.out.println(\"Wrong Format\");\n                System.exit(0);\n            }\n            list.add(num);\n            num = input.nextInt();\n        }\n        DealCardList dealCardList = new DealCardList(list);\n        if(!dealCardList.validate()){\n            System.out.println(\"Wrong Format\");\n            System.exit(0);\n        }\n        dealCardList.showResult();\n        input.close();\n    }\n}\n\nclass DealCardList{\n    ArrayList<Card> cardList=new ArrayList<>();\n\n    public DealCardList() {\n    }\n\n    public DealCardList(ArrayList<Integer> card) {\n        for (Integer integer : card) {\n            if (integer==0)break;\n            switch (integer){\n                case 1:\n                    Card card1=new Card(new Circle(Main.input.nextDouble()));\n                    card1.getShape().setShapeName(\"Circle\");\n                    cardList.add(card1);\n                    break;\n                case 2:\n                    Card card2=new Card(new Rectangle(Main.input.nextDouble(),Main.input.nextDouble()));\n                    card2.getShape().setShapeName(\"Rectangle\");\n                    cardList.add(card2);\n                    break;\n                case 3:\n                    Card card3=new Card(new Triangle(Main.input.nextDouble(),Main.input.nextDouble(),Main.input.nextDouble()));\n                    card3.getShape().setShapeName(\"Triangle\");\n                    cardList.add(card3);\n                    break;\n                case 4:\n                    Card card4=new Card(new Trapezoid(Main.input.nextDouble(),Main.input.nextDouble(),Main.input.nextDouble()));\n                    card4.getShape().setShapeName(\"Trapezoid\");\n                    cardList.add(card4);\n                    break;\n            }\n\n        }\n    }\n    public boolean validate(){\n        boolean ret=true;\n        for (Card card : cardList) {\n            if (!card.getShape().validate()){\n                ret=false;\n                break;\n            }\n        }\n        return ret;\n    }\n    public void cardSort(){\n        TreeSet<Card> cards = new TreeSet<>(cardList);\n        for (Card card : cards) {\n            System.out.print(card.getShape());\n        }\n    }\n    public double getAllArea(){\n        double sum=0;\n        for (Card card : cardList) {\n            sum+=card.getShape().getArea();\n        }\n        return sum;\n    }\n    public void showResult(){\n        System.out.println(\"The original list:\");\n        for (Card card : cardList) {\n            System.out.print(card.getShape());\n        }\n        System.out.println();\n        System.out.println(\"The sorted list:\");\n        cardSort();\n        System.out.println();\n        System.out.printf(\"Sum of area:%.2f\\n\",getAllArea());\n    }\n}\nclass Card implements Comparable<Card>{\n    private Shape shape;\n\n    public Card() {\n    }\n\n    public Card(Shape shape) {\n        this.shape = shape;\n    }\n\n    public Shape getShape() {\n        return shape;\n    }\n\n    public void setShape(Shape shape) {\n        this.shape = shape;\n    }\n\n    @Override\n    public int compareTo(Card card) {\n        return -(int)(shape.getArea()-card.getShape().getArea());\n    }\n}\n\nabstract class Shape{\n    private String shapeName;\n\n    public Shape() {\n    }\n\n    public Shape(String shapeName) {\n        this.shapeName = shapeName;\n    }\n\n    public String getShapeName() {\n        return shapeName;\n    }\n\n    public void setShapeName(String shapeName) {\n        this.shapeName = shapeName;\n    }\n    public abstract double getArea();\n    public abstract boolean validate();\n    @Override\n    public String toString() {\n        return getShapeName()+\":\"+String.format(\"%.2f \",getArea());\n    }\n}\n\nclass Circle extends Shape{\n    private double radius;\n\n    public Circle() {\n    }\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    @Override\n    public double getArea() {\n        return Math.PI*radius*radius;\n    }\n\n    @Override\n    public boolean validate() {\n        return this.radius>0;\n    }\n}\n\nclass Rectangle extends Shape{\n    private double width,height;\n\n    public Rectangle() {\n    }\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public double getWidth() {\n        return width;\n    }\n\n    public void setWidth(double width) {\n        this.width = width;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    @Override\n    public double getArea() {\n        return height*width;\n    }\n\n    @Override\n    public boolean validate() {\n        return width>0&&height>0;\n    }\n}\n\nclass Triangle extends Shape{\n    private double side1,side2,side3;\n\n    public Triangle() {\n    }\n\n    public Triangle(double side1, double side2, double side3) {\n        this.side1 = side1;\n        this.side2 = side2;\n        this.side3 = side3;\n    }\n\n    @Override\n    public double getArea() {\n        double p=(side1+side2+side3)/2;\n        return Math.sqrt(p*(p-side1)*(p-side2)*(p-side3));\n    }\n\n    @Override\n    public boolean validate() {\n        boolean ret=true;\n        if (!(side1>0&&side3>0&&side2>0))ret=false;\n        else{\n            if (!(side1+side2>side3&&side1+side3>side2&&side2+side3>side1))ret=false;\n        }\n        return ret;\n    }\n}\n\nclass Trapezoid extends Shape{\n    private double topSide,bottomSide,height;\n\n    public Trapezoid() {\n    }\n\n    public Trapezoid(double topSide, double bottomSide, double height) {\n        this.topSide = topSide;\n        this.bottomSide = bottomSide;\n        this.height = height;\n    }\n\n    @Override\n    public double getArea() {\n        return (topSide+bottomSide)*height/2;\n    }\n\n    @Override\n    public boolean validate() {\n        return topSide>0&&height>0&&bottomSide>0;\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "1207",
        "memory_consume": "23244"
    },
    {
        "submission_id": "1522203468578734080",
        "user_id": "bc393605090ecd8823d99fa88623bb32229eda0f86ba7b8c2473150ac1684ae5",
        "create_at": "2022-05-05 21:16:02",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1514044981407805482",
        "problem_id": "6918",
        "skill_id": "218",
        "code": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n                double dd = RR.fun();\n                System.out.printf(\"%.2f\",dd);\n    }\n}\nclass RR{\n    public static Double fun(){\n        Scanner in=new Scanner(System.in);\n        double a,b,c,d,e;\n        a = in.nextDouble();\n        b = in.nextDouble();\n        c = in.nextDouble();\n        d = in.nextDouble();\n        e = in.nextDouble();\n        return c;\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "141",
        "memory_consume": "20144"
    },
    {
        "submission_id": "1522205288390770688",
        "user_id": "bc393605090ecd8823d99fa88623bb32229eda0f86ba7b8c2473150ac1684ae5",
        "create_at": "2022-05-05 21:23:16",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1514044981407805492",
        "problem_id": "948765532956610560",
        "skill_id": "215",
        "code": "import java.util.ArrayList;\n\npublic class Main{\nprivate ArrayList<Student> slist = new ArrayList();\n    \n    public void addStudent(Student s){\n        this.slist.add(s);\n    }\n    \n    public void showStudent(){\n        for(Student s:slist){\n            System.out.println(s);\n        }\n    }\n    \n    public static void main(String[] args) {\n        Main t = new Main();\n        t.addStudent(new Student(\"2016001\",\"rose\",18));\n        t.addStudent(new Student(\"2016002\",\"hunifu\",19));\n        t.addStudent(new Student(\"2016003\",\"britsh\",20));\n        t.addStudent(new Student(\"2016004\",\"sunni\",17));\n        t.showStudent();\n    }\n}\n\nclass Student {\n    //补全代码处\n    String num;\n    String name;\n    int age;\n    \n    @Override\n    public String toString() {\n        return   num+\" \" + name+\" \"+  age ;\n    }\n    \n\tpublic Student(String num, String name, int age) {\n\t\tsuper();\n\t\tthis.num = num;\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n}",
        "response": "ACCEPTED",
        "time_consume": "78",
        "memory_consume": "13732"
    },
    {
        "submission_id": "1522206892833673216",
        "user_id": "bc393605090ecd8823d99fa88623bb32229eda0f86ba7b8c2473150ac1684ae5",
        "create_at": "2022-05-05 21:29:39",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1514044981407805507",
        "problem_id": "1057838322939097088",
        "skill_id": "215",
        "code": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[] args){\n        int a,b;\n        Scanner in=new Scanner(System.in);\n        a=in.nextInt();\n        b=in.nextInt();\n        Cylinder x=new Cylinder();\n        x.Cylinder(a,b);\n        System.out.println(x.getVolumn());\n        Cylinder y=new Cylinder();\n        y.Cylinder();\n        System.out.println(y.getVolumn());\n    }\n}\nclass Cylinder{\n    private int radius;\n    private int height;\n    double res;\n    public void setradius(int radius) {\n\t\tthis.radius = radius;\n\t}\n\tpublic int getradius() {\n\t\treturn radius;\n\t}\n\tpublic void setouterRadius(int height) {\n\t\tthis.height = height;\n\t}\n    public void Cylinder(int radius,int height){\n        System.out.println(\"Constructor with para\");\n        this.radius=radius;\n        this.height=height;\n    }\n    public void Cylinder(){\n        this.Cylinder(2,1);\n        System.out.println(\"Constructor no para\");\n    }\n    public int getVolumn(){\n        res=(Math.PI*radius*radius)*height;\n        return (int)res;\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "112",
        "memory_consume": "15496"
    },
    {
        "submission_id": "1522210525092544512",
        "user_id": "bc393605090ecd8823d99fa88623bb32229eda0f86ba7b8c2473150ac1684ae5",
        "create_at": "2022-05-05 21:44:05",
        "language": "Java",
        "score": "40.0",
        "problem_set_problem_id": "1514044981407805559",
        "problem_id": "1250611789692579840",
        "skill_id": "226",
        "code": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\npublic class Main {\n    //在Main类中定义一个静态Scanner对象，这样在其它类中如果想要使用该对象进行输入，则直接\n//使用Main.input.next…即可（避免采坑）\n    public static Scanner input = new Scanner(System.in);\n    public static void main(String[] args){\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        int num = input.nextInt();\n        while(num != 0){\n            if(num < 0 || num > 4){\n                System.out.println(\"Wrong Format\");\n                System.exit(0);\n            }\n            list.add(num);\n            num = input.nextInt();\n        }\n        DealCardList dealCardList = new DealCardList(list);\n        if(!dealCardList.validate()){\n            System.out.println(\"Wrong Format\");\n            System.exit(0);\n        }\n        dealCardList.showResult();\n        input.close();\n    }\n}\n\nclass DealCardList{\n    ArrayList<Card> cardList=new ArrayList<>();\n\n    public DealCardList() {\n    }\n\n    public DealCardList(ArrayList<Integer> card) {\n        for (Integer integer : card) {\n            if (integer==0)break;\n            switch (integer){\n                case 1:\n                    Card card1=new Card(new Circle(Main.input.nextDouble()));\n                    card1.getShape().setShapeName(\"Circle\");\n                    cardList.add(card1);\n                    break;\n                case 2:\n                    Card card2=new Card(new Rectangle(Main.input.nextDouble(),Main.input.nextDouble()));\n                    card2.getShape().setShapeName(\"Rectangle\");\n                    cardList.add(card2);\n                    break;\n                case 3:\n                    Card card3=new Card(new Triangle(Main.input.nextDouble(),Main.input.nextDouble(),Main.input.nextDouble()));\n                    card3.getShape().setShapeName(\"Triangle\");\n                    cardList.add(card3);\n                    break;\n                case 4:\n                    Card card4=new Card(new Trapezoid(Main.input.nextDouble(),Main.input.nextDouble(),Main.input.nextDouble()));\n                    card4.getShape().setShapeName(\"Trapezoid\");\n                    cardList.add(card4);\n                    break;\n            }\n\n        }\n    }\n    public boolean validate(){\n        boolean ret=true;\n        for (Card card : cardList) {\n            if (!card.getShape().validate()){\n                ret=false;\n                break;\n            }\n        }\n        return ret;\n    }\n    public void cardSort(){\n        TreeSet<Card> cards = new TreeSet<>(cardList);\n        for (Card card : cards) {\n            System.out.print(card.getShape());\n        }\n    }\n    public double getAllArea(){\n        double sum=0;\n        for (Card card : cardList) {\n            sum+=card.getShape().getArea();\n        }\n        return sum;\n    }\n    public void showResult(){\n        System.out.println(\"The original list:\");\n        for (Card card : cardList) {\n            System.out.print(card.getShape());\n        }\n        System.out.println();\n        System.out.println(\"The sorted list:\");\n        cardSort();\n        System.out.println();\n        System.out.printf(\"Sum of area:%.2f\\n\",getAllArea());\n    }\n}\nclass Card implements Comparable<Card>{\n    private Shape shape;\n\n    public Card() {\n    }\n\n    public Card(Shape shape) {\n        this.shape = shape;\n    }\n\n    public Shape getShape() {\n        return shape;\n    }\n\n    public void setShape(Shape shape) {\n        this.shape = shape;\n    }\n\n    @Override\n    public int compareTo(Card card) {\n        return -(int)(shape.getArea()-card.getShape().getArea());\n    }\n}\n\nabstract class Shape{\n    private String shapeName;\n\n    public Shape() {\n    }\n\n    public Shape(String shapeName) {\n        this.shapeName = shapeName;\n    }\n\n    public String getShapeName() {\n        return shapeName;\n    }\n\n    public void setShapeName(String shapeName) {\n        this.shapeName = shapeName;\n    }\n    public abstract double getArea();\n    public abstract boolean validate();\n\n    /**\n     * 重写了toString的方法\n     * 利用Shape类的shapeName变量来表示相应的图形，\n     * 而不是用getclass方法得到类名\n     * @return\n     */\n    @Override\n    public String toString() {\n        return getShapeName()+\":\"+String.format(\"%.2f \",getArea());\n    }\n}\n\nclass Circle extends Shape{\n    private double radius;\n\n    public Circle() {\n    }\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public void setRadius(double radius) {\n        this.radius = radius;\n    }\n\n    @Override\n    public double getArea() {\n        return Math.PI*radius*radius;\n    }\n\n    @Override\n    public boolean validate() {\n        return this.radius>0;\n    }\n}\n\nclass Rectangle extends Shape{\n    private double width,height;\n\n    public Rectangle() {\n    }\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public double getWidth() {\n        return width;\n    }\n\n    public void setWidth(double width) {\n        this.width = width;\n    }\n\n    public double getHeight() {\n        return height;\n    }\n\n    public void setHeight(double height) {\n        this.height = height;\n    }\n\n    @Override\n    public double getArea() {\n        return height*width;\n    }\n\n    @Override\n    public boolean validate() {\n        return width>0&&height>0;\n    }\n}\n\nclass Triangle extends Shape{\n    private double side1,side2,side3;\n\n    public Triangle() {\n    }\n\n    public Triangle(double side1, double side2, double side3) {\n        this.side1 = side1;\n        this.side2 = side2;\n        this.side3 = side3;\n    }\n\n    @Override\n    public double getArea() {\n        double p=(side1+side2+side3)/2;\n        return Math.sqrt(p*(p-side1)*(p-side2)*(p-side3));\n    }\n\n    @Override\n    public boolean validate() {\n        boolean ret=true;\n        if (!(side1>0&&side3>0&&side2>0))ret=false;\n        else{\n            if (!(side1+side2>side3&&side1+side3>side2&&side2+side3>side1))ret=false;\n        }\n        return ret;\n    }\n}\n\nclass Trapezoid extends Shape{\n    private double topSide,bottomSide,height;\n\n    public Trapezoid() {\n    }\n\n    public Trapezoid(double topSide, double bottomSide, double height) {\n        this.topSide = topSide;\n        this.bottomSide = bottomSide;\n        this.height = height;\n    }\n\n    @Override\n    public double getArea() {\n        return (topSide+bottomSide)*height/2;\n    }\n\n    @Override\n    public boolean validate() {\n        return topSide>0&&height>0&&bottomSide>0;\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "1203",
        "memory_consume": "24000"
    },
    {
        "submission_id": "1522214687213649920",
        "user_id": "bc393605090ecd8823d99fa88623bb32229eda0f86ba7b8c2473150ac1684ae5",
        "create_at": "2022-05-05 22:00:37",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1514044981407805583",
        "problem_id": "1318913484051648512",
        "skill_id": "1077593675617677312",
        "code": "import java.util.Scanner;\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner in=new Scanner(System.in);\n\t\tint n=in.nextInt();\n\t\tPerson1[] x=new Person1[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tx[i]=new Person1(in.next(),in.nextInt());\n\t\t}\n\t\tin.nextLine();\n\t\tString key=in.nextLine();\n\t\t//System.out.println(key);\n\t\tint index=-1;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tSystem.out.println(x[i].toString());\n\t\t\tif(x[i].name.equals(key))index=i;\n\t\t\t//System.out.println(x[i].name);\n\t\t}\n\t\tif(index==-1)System.out.println(\"not found\");\n\t\telse System.out.println(\"查询结果：\\n\"+x[index].toString());\n\t}\n\n}\nclass Person1{\n\tString name;\n\tint age;\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\tpublic Person1() {\n\t\tsuper();\n\t\tthis.name=\"none\";\n\t\tthis.age=1;\n\t}\n\tpublic Person1(String name, int age) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Person [name=\" + name + \", age=\" + age + \"]\";\n\t}\n}",
        "response": "ACCEPTED",
        "time_consume": "238",
        "memory_consume": "15104"
    },
    {
        "submission_id": "1522219766499028992",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-05-05 22:20:48",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1514044981407805462",
        "problem_id": "5830",
        "skill_id": "215",
        "code": "public class Main {\n    public Main()\n    {\n        System.out.println(\"构造方法一被调用了\");\n    }\n    \n    public Main(int x)\n    {\n        this();\n        System.out.println(\"构造方法二被调用了\");\n    }\n    \n    public Main(boolean b)\n    {\n        this(1);\n        System.out.println(\"构造方法三被调用了\");\n    }\n    \n    public static void main(String[] args) \n    {\n        Main a = new Main(true);\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "79",
        "memory_consume": "13384"
    },
    {
        "submission_id": "1522221724622434304",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-05-05 22:28:35",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1514044981407805472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        String s = sc.nextLine();\n        String[] str=s.split(\" \");\n        Student student=new Student(str[0],str[2],Integer.valueOf(str[1]));\n        System.out.println(student);\n    }\n}\nclass Student  {\n    private String name;\n    private String sex;\n    private int age;\n\n    public void setName(String name){\n        this.name=name;\n    }\n\n    public void setsex(String sex){\n        this.sex=sex;\n    }\n\n    public void setage(int age){\n        this.age=age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getSex() {\n        return sex;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    @Override\n    public String toString() {\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\n        return str;\n    }\n\n\n    public Student(){\n\n    }\n\n    public Student(String name, String sex, int age) {\n        this.name = name;\n        this.sex = sex;\n        this.age = age;\n    }\n}\n\n\n",
        "response": "ACCEPTED",
        "time_consume": "261",
        "memory_consume": "19056"
    },
    {
        "submission_id": "1522222393571979264",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-05-05 22:31:14",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1514044981407805482",
        "problem_id": "6918",
        "skill_id": "218",
        "code": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        double dd = RR.fun();\n        System.out.printf(\"%.2f\",dd);\n    }\n}\nclass RR{\n    public static Double fun(){\n        Scanner scanner=new Scanner(System.in);\n        double a[]=new double[5];\n        for (int i=0;i<5;i++){\n            a[i]=scanner.nextDouble();\n        }\n        return a[2];\n    }\n \n \n}",
        "response": "ACCEPTED",
        "time_consume": "132",
        "memory_consume": "19380"
    },
    {
        "submission_id": "1522222560891154432",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-05-05 22:31:54",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1514044981407805492",
        "problem_id": "948765532956610560",
        "skill_id": "215",
        "code": "import java.util.ArrayList;\n \npublic class Main{\n    private ArrayList<Student> slist = new ArrayList();\n \n    public void addStudent(Student s){\n        this.slist.add(s);\n    }\n \n    public void showStudent(){\n        for(Student s:slist){\n            System.out.println(s);\n        }\n    }\n \n    public static void main(String[] args) {\n        Main t = new Main();\n        t.addStudent(new Student(\"2016001\",\"rose\",18));\n        t.addStudent(new Student(\"2016002\",\"hunifu\",19));\n        t.addStudent(new Student(\"2016003\",\"britsh\",20));\n        t.addStudent(new Student(\"2016004\",\"sunni\",17));\n        t.showStudent();\n    }\n}\n \n \nclass Student {\n    String date;\n    String name;\n    int age;\n \n    @Override\n    public String toString() {\n        return   date+\" \" + name+\" \"+  age ;\n    }\n \n    public Student(String date, String name, int age) {\n        this.date = date;\n        this.name = name;\n        this.age = age;\n    }\n}\n ",
        "response": "ACCEPTED",
        "time_consume": "81",
        "memory_consume": "13556"
    },
    {
        "submission_id": "1522222793100394496",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-05-05 22:32:50",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1514044981407805507",
        "problem_id": "1057838322939097088",
        "skill_id": "215",
        "code": "import java.util.Scanner;\nimport java.util.concurrent.Callable;\n\nclass Cylinder{\n    private  int radius;\n    private int height;\n\n    public int getRadius() {\n        return radius;\n    }\n\n    public void setRadius(int radius) {\n        this.radius = radius;\n    }\n\n    public int getHeight() {\n        return height;\n    }\n\n    public void setHeight(int height) {\n        this.height = height;\n    }\n\n    public Cylinder(int radius, int height) {\n        this.radius = radius;\n        this.height = height;\n        System.out.println(\"Constructor with para\");\n    }\n\n    public Cylinder() {\n        this(2,1);\n        System.out.println(\"Constructor no para\");\n    }\n    public int getVolumn(){\n        return (int)(radius*radius*Math.PI*height);\n    }\n}\nclass Main{\n    public static void main(String[] args) {\n        Scanner s=new Scanner(System.in);\n        Cylinder c=new Cylinder(s.nextInt(),s.nextInt());\n\n        System.out.println(c.getVolumn());\n        Cylinder c1=new Cylinder();\n        System.out.println(c1.getVolumn());\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "123",
        "memory_consume": "18112"
    },
    {
        "submission_id": "1381417750090842112",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-04-12 09:23:51",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1379073433347588098",
        "problem_id": "5830",
        "skill_id": "215",
        "code": "public class Main {\n    public Main(){\n        System.out.println(\"构造方法一被调用了\");\n    }\n    public Main(int x){\n        this();\n        System.out.println(\"构造方法二被调用了\");\n    }\n    public Main(boolean b){\n        this(1);\n        System.out.println(\"构造方法三被调用了\");\n    }\n    public static void main(String[] args) {\n    Main a=new Main(true);\n  \n   \n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "89",
        "memory_consume": "13584"
    },
    {
        "submission_id": "1383225826986258432",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-04-17 09:08:30",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1379073433351782403",
        "problem_id": "6918",
        "skill_id": "218",
        "code": "import java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        double dd = RR.fun();\n        System.out.printf(\"%.2f\",dd);\n    }\n}\nclass RR{\n    public static Double fun(){\n        Scanner scanner=new Scanner(System.in);\n        double a[]=new double[5];\n        for (int i=0;i<5;i++){\n            a[i]=scanner.nextDouble();\n        }\n        double tem;\n       for (int i=0;i<5;i++){\n          for (int j=0;j<5-i-1;j++){\n             if (a[j]>a[j+1]){\n                 tem=a[j];         \n                 a[j]=a[j+1];\n              a[j+1]=tem;\n              }\n            }\n        }\n        return a[2];\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "203",
        "memory_consume": "17664"
    },
    {
        "submission_id": "1384115533838745600",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-04-19 20:03:53",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1379073433351782401",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\n\nclass Student{\n\tprivate String name;\n\tprivate String sex;\n\tprivate int age;\n\tpublic Student(String name, String sex, int age) {\n\t\t\n\t\tthis.name = name;\n\t\tthis.sex = sex;\n\t\tthis.age = age;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Student [name='\" + name + \"', sex='\" + sex + \"', age=\" + age + \"]\";\n\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic String getSex() {\n\t\treturn sex;\n\t}\n\n\tpublic void setSex(String sex) {\n\t\tthis.sex = sex;\n\t}\n\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\t\t\n}\npublic class Main{\npublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString name=sc.next();\n\t\tint age=sc.nextInt();\n\t\tString sex=sc.next();\n\t\tStudent s1=new Student(name,sex,age);\n\t\tSystem.out.println(s1.toString());\n\n\t}\n\n}",
        "response": "ACCEPTED",
        "time_consume": "265",
        "memory_consume": "14764"
    },
    {
        "submission_id": "1384121525024522240",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-04-19 20:27:41",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1379073433351782405",
        "problem_id": "948765532956610560",
        "skill_id": "215",
        "code": "import java.util.ArrayList;\n\npublic class Main{\n    private ArrayList slist = new ArrayList();\n\n    public void addStudent(Student s){\n        this.slist.add(s);\n    }\n\n    public void showStudent(){\n        for(Object s:slist){\n            System.out.println(s);\n        }\n    }\n\n    public static void main(String[] args) {\n        Main t = new Main();\n        t.addStudent(new Student(\"2016001\",\"rose\",18));\n        t.addStudent(new Student(\"2016002\",\"hunifu\",19));\n        t.addStudent(new Student(\"2016003\",\"britsh\",20));\n        t.addStudent(new Student(\"2016004\",\"sunni\",17));\n        t.showStudent();\n    }\n}\nclass Student {\n    String date;\n    String name;\n    int age;\n    @Override\n    public String toString() {\n        return   date+\" \" + name+\" \"+  age ;\n    }\n    public Student(String date, String name, int age) {\n        this.date = date;\n        this.name = name;\n        this.age = age;\n    }\n}\n ",
        "response": "ACCEPTED",
        "time_consume": "87",
        "memory_consume": "12836"
    },
    {
        "submission_id": "1386296140254224384",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-04-25 20:28:50",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1379073433355976705",
        "problem_id": "1057838322939097088",
        "skill_id": "215",
        "code": "import java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner in=new Scanner(System.in);\n\t\tint r=in.nextInt();\n\t\tint h=in.nextInt();\n\t\tCylinder c1=new Cylinder(r,h);\n\t\tSystem.out.println(c1.getVolumn());\n\t\tCylinder c2=new Cylinder();\n\t\tSystem.out.println(c2.getVolumn());\n\n\t}\n\n}\nclass Cylinder{\n\tprivate int radius,height ;\n\tpublic Cylinder(int radius,int height){\n\t\tthis.height=height;\n\t\tthis.radius=radius;\n\t\tSystem.out.println(\"Constructor with para\");\n\t}\n\tpublic Cylinder() {\n\t\tthis.radius=2;\n\t\tthis.height=1;\n        System.out.println(\"Constructor with para\");\n\t\tSystem.out.println(\"Constructor no para\");\n\t}\n\t\n\tpublic int getVolumn(){\n\t\treturn (int) (Math.PI*radius*radius*height);\n\t\t\t\t\n\t} \n\t\n\t\n\tpublic int getRadius() {\n\t\treturn radius;\n\t}\n\n\tpublic void setRadius(int radius) {\n\t\tthis.radius = radius;\n\t}\n\n\tpublic int getHeight() {\n\t\treturn height;\n\t}\n\n\tpublic void setHeight(int height) {\n\t\tthis.height = height;\n\t}\n\t\n}",
        "response": "ACCEPTED",
        "time_consume": "151",
        "memory_consume": "14924"
    },
    {
        "submission_id": "1386657285645770752",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-04-26 20:23:54",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1379073433372753924",
        "problem_id": "1318913484051648512",
        "skill_id": "1077593675617677312",
        "code": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String args[]) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint i,n,id=-1;\n\t\tString nm;\n\t\tn=sc.nextInt();\n\t\tPerson p[]=new Person[n];\n\t\tfor(i=0;i<n;i++) {\n\t\t\tp[i]=new Person(sc.next(),sc.nextInt());\n\t\t}\n\t\tnm=sc.next();\n\t\tfor(i=0;i<n;i++) {\n\t\t\tSystem.out.println(p[i]);\n\t\t\tif(p[i].getName().equals(nm)) {\n\t\t\t\tid=i;\n\t\t\t}\n\t\t}\n\t\tif(id!=-1) {\n\t\t\tSystem.out.println(\"查询结果：\");\n\t\t\tSystem.out.println(p[id]);\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"not found\");\n\t\t}\n\t}\n}\nclass Person {\n    private String name;\n    private int age;\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\tpublic Person() {\n\t\t\n\t}\n\tpublic Person(String name, int age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Person [name=\" + name + \", age=\" + age + \"]\";\n\t}\n}",
        "response": "ACCEPTED",
        "time_consume": "275",
        "memory_consume": "14984"
    },
    {
        "submission_id": "1386672442212065280",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-04-26 21:24:08",
        "language": "Java",
        "score": "40.0",
        "problem_set_problem_id": "1379073433368559619",
        "problem_id": "1250611789692579840",
        "skill_id": "226",
        "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\t\t//在Main类中定义一个静态Scanner对象，这样在其它类中如果想要使用该对象进行输入，则直接\n\t\t//使用Main.input.next…即可（避免采坑）\n\t\tpublic static Scanner input = new Scanner(System.in);\n\t\tpublic static void main(String[] args){\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\tint num = input.nextInt();\n\t\twhile(num != 0){\n\t\tif(num < 0 || num > 4){\n\t\tSystem.out.println(\"Wrong Format\");\n\t\tSystem.exit(0);\n\t\t}\n\t\t list.add(num);\n\t\t num = input.nextInt();\n\t\t}\n\t\tDealCardList dealCardList = new DealCardList(list);\n\t\tif(!dealCardList.validate()){\n\t\tSystem.out.println(\"Wrong Format\");\n\t\tSystem.exit(0);\n\t\t}\n\t\tdealCardList.showResult();\n\t\tinput.close();\n\t\t}\n\t}\nclass Card{\n\t Shape shape;\n\tCard(){\n\t\t\n\t}\n\tCard(Shape shape){\n\t\tthis.shape=shape;\n\t}\n\tpublic Shape getShape() {\n\t\treturn shape;\n\t}\n\tpublic void setShape(Shape Shape) {\n\t\tthis.shape=shape;\n\t}\n\t\n}\nclass DealCardList{\n\tArrayList<Card> cardList=new ArrayList<Card>();\n\tDealCardList(){\n\t\t\n\t}\n\tDealCardList(ArrayList<Integer> list){\n\t\tfor(int i=0;i<list.size();i++)\n\t\t{\n\t\t\tif(list.get(i)==1)\n\t\t\t{\n\t\t\t\tdouble r=Main.input.nextDouble();\n\t\t\t\tCircle circle=new Circle(r);\n\t\t\t\tCard card=new Card(circle);\n\t\t\t\tcard.getShape().setShapeName(\"Circle\");\n\t\t\t\tcardList.add(card);\t\n\t\t\t}\n\t\t\tif(list.get(i)==2) {\n\t\t\t\tdouble a=Main.input.nextDouble();\n\t\t\t\tdouble b=Main.input.nextDouble();\n\t\t\t\tRectangle rectangle=new Rectangle(a,b);\n\t\t\t\tCard card=new Card(rectangle);\n\t\t\t\tcard.getShape().setShapeName(\"Rectangle\");\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\tif(list.get(i)==3) {\n\t\t\t\tdouble a=Main.input.nextDouble();\n\t\t\t\tdouble b=Main.input.nextDouble();\n\t\t\t\tdouble c=Main.input.nextDouble();\n\t\t\t\tTriangle triangle=new Triangle(a,b,c);\n\t\t\t\tCard card=new Card(triangle);\n\t\t\t\tcard.getShape().setShapeName(\"Triangle\");\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\tif(list.get(i)==4) {\n\t\t\t\tdouble a=Main.input.nextDouble();\n\t\t\t\tdouble b=Main.input.nextDouble();\n\t\t\t\tdouble c=Main.input.nextDouble();\n\t\t\t\tTraperoid traperoid=new Traperoid(a,b,c);\n\t\t\t\tCard card=new Card(traperoid);\n\t\t\t\tcard.getShape().setShapeName(\"Trapezoid\");\n\t\t\t\tcardList.add(card);\n\t\t\t}\n\t\t\t}\n\t}\n\tpublic boolean validate() {\n\t\tfor(int i=0;i<cardList.size();i++)\n\t\t\t{if(!cardList.get(i).getShape().vaildate())\n\t\t\t\t\treturn false;}\n\t\treturn true;\n\t}\n\tpublic void cardSort() {\n\t\tfor(int k=0;k<cardList.size();k++)\n\t\t\tfor(int i=k+1;i<cardList.size();i++)\n\t\t\t{\n\t\t\t\tif(cardList.get(k).getShape().getArea()<cardList.get(i).getShape().getArea())\n\t\t\t\t\tCollections.swap(cardList, k, i);\n\t\t\t}\n\t\t\n\t\t\n\t}\n\tpublic double getAllArea() {\n\t\tdouble s=0;\n\t\tfor(int i=0;i<cardList.size();i++)\n\t\ts=s+cardList.get(i).getShape().getArea();\n\t\treturn s;\n\t}\n\tpublic void showResult() {\n\t\tSystem.out.println(\"The original list:\");\n\t\tfor(int i=0;i<cardList.size();i++)\n\t\t\tSystem.out.print(cardList.get(i).getShape().getShapeName()+\":\"+String.format(\"%.2f\",cardList.get(i).getShape().getArea())+\" \");\n\t\tSystem.out.println();\n\t\tSystem.out.println(\"The sorted list:\");\n\t\tcardSort();\n\t\tfor(int i=0;i<cardList.size();i++)\n\t\tSystem.out.print(cardList.get(i).getShape().getShapeName()+\":\"+String.format(\"%.2f\",cardList.get(i).getShape().getArea())+\" \");\n\t\tSystem.out.println();\n\t\tSystem.out.println(\"Sum of area:\"+String.format(\"%.2f\",getAllArea()));\n\t}\n}\n class Shape {\n\tprivate String shapeName;\n\tShape(){\n\t\t\n\t}\n\tShape(String shapeName){\n\t\tthis.shapeName=shapeName;\n\t}\n\tpublic String getShapeName() {\n\t\treturn shapeName;\n\t}\n\tpublic void setShapeName(String shapeName) {\n\t\tthis.shapeName=shapeName;\n\t}\n\tpublic double getArea() {\n\t\treturn 0.0;\n\t}\n\tpublic boolean vaildate() {\n\t\treturn true;\n\t}\n\t\n}\nclass Circle extends Shape{\n\tprivate double radius;\n\tCircle(){\n\t\t\n\t}\n\tCircle(double radius){\n\t\tthis.radius=radius;\n\t}\n\tpublic double getArea() {\n\t\treturn Math.PI*radius*radius;\n\t}\n\tpublic boolean vaildate() {\n\t\tif(radius>0)\n\t\treturn true;\n\t\telse return false;\n\t}\n}\nclass Rectangle extends Shape{\n\tprivate double width,length;\n\tRectangle (double width,double length){\n\t\tthis.width=width;\n\t\tthis.length=length;\n\t}\n\tpublic double getArea() {\n\t\treturn width*length;\n\t}\n\tpublic boolean vaildate() {\n\t\tif(width>0&&length>0)\n\t\treturn true;\n\t\telse return false;\n\t}\n\t\n}\nclass Triangle extends Shape{\n\t double side1,side2,side3;\n\t Triangle(double side1,double side2,double side3){\n\t\t this.side1=side1;\n\t\t this.side2=side2;\n\t\t this.side3=side3;\n\t }\n\t public double getArea() {\n\t\t double c=(side1+side2+side3)/2;\n\t\t double s=Math.sqrt(c*(c-side1)*(c-side2)*(c-side3));\n\t\t\treturn s;\n\t\t}\n\t public boolean vaildate() {\n\t\t\tif(side1+side2>side3&&side1+side3>side2&&side2+side3>side1)\n\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\n\t\n}\nclass Traperoid extends Shape{\n\tprivate double topSide,bottomSide,height;\n\tTraperoid(){\n\t\t\n\t}\n\tTraperoid(double topSide,double bottomSide,double height){\n\t\tthis.bottomSide=bottomSide;\n\t\tthis.height=height;\n\t\tthis.topSide=topSide;\n\t}\n\tpublic double getArea() {\n\t\treturn (topSide+bottomSide)*height/2;\n\t}\n\tpublic boolean validate() {\n\t\tif(topSide>0&&bottomSide>0&&height>0)\n\t\t\treturn true;\n\t\telse return false;\n\t}\n}",
        "response": "ACCEPTED",
        "time_consume": "1431",
        "memory_consume": "19284"
    },
    {
        "submission_id": "1412333896843980800",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-07-06 16:53:35",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1407268555767255083",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\n\nclass Student{\n\tprivate String name;\n\tprivate String sex;\n\tprivate int age;\n\tpublic Student(String name, String sex, int age) {\n\t\t\n\t\tthis.name = name;\n\t\tthis.sex = sex;\n\t\tthis.age = age;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Student [name='\" + name + \"', sex='\" + sex + \"', age=\" + age + \"]\";\n\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic String getSex() {\n\t\treturn sex;\n\t}\n\n\tpublic void setSex(String sex) {\n\t\tthis.sex = sex;\n\t}\n\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\n\tpublic void setAge(int age) {\n\t\tthis.age = age;\n\t}\n\t\t\n}\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString name=sc.next();\n\t\tint age=sc.nextInt();\n\t\tString sex=sc.next();\n\t\tStudent s1=new Student(name,sex,age);\n\t\tSystem.out.println(s1.toString());\n\n\t}\n\n}\n\n",
        "response": "ACCEPTED",
        "time_consume": "337",
        "memory_consume": "14772"
    },
    {
        "submission_id": "1412334364651495424",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-07-06 16:55:27",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1407268555767255085",
        "problem_id": "1057838322939097088",
        "skill_id": "215",
        "code": "import java.util.Scanner;\n\npublic class Main{\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner in=new Scanner(System.in);\n\t\tint r=in.nextInt();\n\t\tint h=in.nextInt();\n\t\tCylinder c1=new Cylinder(r,h);\n\t\tSystem.out.println(c1.getVolumn());\n\t\tCylinder c2=new Cylinder();\n\t\tSystem.out.println(c2.getVolumn());\n\n\t}\n\n}\nclass Cylinder{\n\tprivate int radius,height ;\n\tpublic Cylinder(int radius,int height){\n\t\tthis.height=height;\n\t\tthis.radius=radius;\n\t\tSystem.out.println(\"Constructor with para\");\n\t}\n\tpublic Cylinder() {\n\t\tthis.radius=2;\n\t\tthis.height=1;\n        System.out.println(\"Constructor with para\");\n\t\tSystem.out.println(\"Constructor no para\");\n\t}\n\t\n\tpublic int getVolumn(){\n\t\treturn (int) (Math.PI*radius*radius*height);\n\t\t\t\t\n\t} \n\t\n\t\n\tpublic int getRadius() {\n\t\treturn radius;\n\t}\n\n\tpublic void setRadius(int radius) {\n\t\tthis.radius = radius;\n\t}\n\n\tpublic int getHeight() {\n\t\treturn height;\n\t}\n\n\tpublic void setHeight(int height) {\n\t\tthis.height = height;\n\t}\n\t\n}\n",
        "response": "ACCEPTED",
        "time_consume": "157",
        "memory_consume": "14800"
    },
    {
        "submission_id": "1539815929302196224",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-06-23 11:41:40",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1539562936736665741",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.Scanner;\n public class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\tint f[] = new int[10];\n\t\tint sum = 0;\n \n\t\tfor (int i = 1; i <= 7; i++) {\n            f[i] = cin.nextInt();\n\t\t}\n\t\tsum += f[1];\n\t\tfor (int i = 7; i > 1; i--)\n\t\t\tif (f[i] != 0) {\n\t\t\t\tsum += i * f[1];\n\t\t\t\tbreak;\n\t\t\t}\n \n\t\tfor (int i = 2; i <= 7; i++)\n\t\t\tsum += f[i] * i;\n \n\t\tSystem.out.print(sum);\n\t}\n}",
        "response": "ACCEPTED",
        "time_consume": "378",
        "memory_consume": "15108"
    },
    {
        "submission_id": "1539817580993941504",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-06-23 11:48:14",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1539562936736665735",
        "problem_id": "928411340942651392",
        "skill_id": "188",
        "code": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        Main.print(s);\n\n    }\n    public static void print(String s){\n        for (int i=65;i<=s.charAt(0);i++){\n            for (int j=1;j<105-i;j++){\n                System.out.print(\" \");\n            }\n            System.out.print((char)i);\n            if (i!=65&&i<s.charAt(0)){\n                for (int k = 0; k < i-65; k++) {\n                    System.out.print(\" \");\n                }\n                for (int l = 0; l < i-66; l++) {\n                    System.out.print(\" \");\n                }\n            }\n            if (i==s.charAt(0)){\n                for (int m=1;m<2*(i-65);m++){\n                    System.out.print((char)i);\n                }\n            }\n            if (i!=65) System.out.print((char)i);\n            System.out.println();\n        }\n    }\n}\n",
        "response": "ACCEPTED",
        "time_consume": "587",
        "memory_consume": "16480"
    },
    {
        "submission_id": "1539854995913674752",
        "user_id": "0c1715ed534d263fc065fdd02145c20752ce940eb242530600119af39285b193",
        "create_at": "2022-06-23 14:16:54",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1539562936736665718",
        "problem_id": "1232973781593665536",
        "skill_id": "177",
        "code": "import java.util.Scanner;\n \npublic class Main {\n\tpublic static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int m = scan.nextInt();\n        int[] a = new int[3];\n        int i = 0;\n        while(m>0) {\n        \ta[i++] = m%10;\n        \tm/=10;\n        }\n        int sum = 0;\n        for(int j = 0;j < 3;j++) {\n        \tsum += a[j];\n        }\n        System.out.print(sum);\n\t}\n}",
        "response": "ACCEPTED",
        "time_consume": "354",
        "memory_consume": "15440"
    },
    {
        "submission_id": "1541245126839070720",
        "user_id": "bc393605090ecd8823d99fa88623bb32229eda0f86ba7b8c2473150ac1684ae5",
        "create_at": "2022-06-27 10:20:47",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1539943948754874437",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[] args){\n        Scanner in=new Scanner(System.in);\n        int n=in.nextInt();\n        int a=0,b=0;\n        for(int i=0;i<n;i++){\n            int x=in.nextInt();\n            if(x>=0&&x<60){\n                a++;\n            }\n            else if(x>=60&&x<=100){\n                b++;\n            }\n            else{i=i-1;\n                System.out.println(x+\"invalid!\");\n            }\n        }\n        System.out.println(b);\n        System.out.println(a);\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "229",
        "memory_consume": "15000"
    },
    {
        "submission_id": "1538128942186852352",
        "user_id": "798f071be683ce53edd99ad1c410208dd79483bf836d208e40a058228a60fe1c",
        "create_at": "2022-06-18 19:58:11",
        "language": "Java",
        "score": "25.0",
        "problem_set_problem_id": "1535414608486715404",
        "problem_id": "1520682074279870464",
        "skill_id": "216",
        "code": "import java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tString instr = in.nextLine();\n\t\tSimpleDateFormat format = new SimpleDateFormat(\"yyyy MM dd\");\n\t\tin.close();\n\t\ttry {\n\t\t\tDate date = format.parse(instr);\n\t\t\t\n\t\t\tformat = new SimpleDateFormat(\"E\",Locale.CHINA);\n\t\t\t\n\t\t\tString weekday = format.format(date);\n\t\t\tformat = new SimpleDateFormat(\"DD\");\n\t\t\tSystem.out.println(format.format(date));\n\t\t\t\n\t\t} catch (ParseException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\n\t}\n\n}",
        "response": "ACCEPTED",
        "time_consume": "679",
        "memory_consume": "15984"
    },
    {
        "submission_id": "1469328899740774400",
        "user_id": "3206bb58dda8c552fc372555fc405f471a1bc56fbe0fe5f79ba6dccc845defb8",
        "create_at": "2021-12-10 23:31:23",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430366644418076691",
        "problem_id": "1425395137814978560",
        "skill_id": "206",
        "code": "import java.util.*;\nimport java.util.Map.Entry;\nimport java.io.*;\nimport java.text.*;\nimport java.math.*;\n\npublic class Main{\n    public static void main(String[] args) {\n    \tScanner reader = new Scanner(System.in);\n    \tMap<Integer, Integer> num = new TreeMap<Integer, Integer>();\n    \tMap<Integer, String> name = new TreeMap<Integer, String>();\n    \tMap<Integer, String> brand = new TreeMap<Integer, String>();\n    \tMap<Integer, Double> price = new TreeMap<Integer, Double>();\n    \tMap<Integer, Integer> sell = new TreeMap<Integer, Integer>();\n    \tList<Integer> l = new ArrayList<Integer>();\n    \tList<Integer> warehouse = new ArrayList<Integer>();\n    \tint n = reader.nextInt();\n    \tfor(int i = 0 ; i < n ; ++i) {\n    \t\tint id = reader.nextInt();\n    \t\tString inform_name = reader.next();\n    \t\tString inform_brand = reader.next();\n    \t\tdouble inform_price = reader.nextDouble();\n    \t\tint inform_num = reader.nextInt();\n    \t\tname.put(id, inform_name);\n    \t\tnum.put(id, inform_num);\n    \t\tbrand.put(id, inform_brand);\n    \t\tprice.put(id, inform_price);\n    \t\twarehouse.add(id);\n    \t}\n    \tint m = reader.nextInt();\n    \twhile(m-- > 0) {\n    \t\tint a = reader.nextInt();\n    \t\tint b = reader.nextInt();\n    \t\tint c = reader.nextInt();\n    \t\tif(c == 1) {\n    \t\t\tif(l.contains(a) && warehouse.contains(a)) {\n    \t\t\t\tsell.put(a, sell.get(a) + (num.get(a) > b ? b : num.get(a)));\n    \t\t\t\tnum.put(a, num.get(a) - b > 0 ? num.get(a) - b : 0);\n    \t\t\t}\n    \t\t\telse if(warehouse.contains(a)){\n    \t\t\t\tl.add(a);\n    \t\t\t\tsell.put(a, num.get(a) > b ? b : num.get(a));\n    \t\t\t\tnum.put(a, num.get(a) - sell.get(a));\n    \t\t\t}\n    \t\t\t//System.out.println(a + \" \" + num.get(a) + \" \" + sell.get(a));\n    \t\t}\n    \t\telse if(c == 2) {\n    \t\t\tif(l.contains(a) && warehouse.contains(a)) {\n    \t\t\t\tint past_num = sell.get(a);\n    \t\t\t\tsell.put(a, sell.get(a) - b > 0 ? sell.get(a) - b : 0);\n    \t\t\t\tnum.put(a, num.get(a) + (b < past_num ? b : past_num));\n    \t\t\t\tif(sell.get(a) == 0) {\n    \t\t\t\t\tfor(int i = 0 ; i < l.size() ; ++i) {\n    \t\t\t\t\t\tif(l.get(i) == a) {\n    \t\t\t\t\t\t\tl.remove(i);\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t//System.out.println(a + \" \" + num.get(a) + \" \" + sell.get(a));\n    \t\t}\n    \t\telse if(c == 3) {\n    \t\t\tif(l.contains(a) && warehouse.contains(a)) {\n    \t\t\t\tint past_num = sell.get(a);\n    \t\t\t\tsell.put(a, 0);\n    \t\t\t\tnum.put(a,  num.get(a) + past_num);\n    \t\t\t\tfor(int i = 0 ; i < l.size() ; ++i) {\n\t\t\t\t\t\tif(l.get(i) == a) {\n\t\t\t\t\t\t\tl.remove(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n    \t\t\t}\n    \t\t\t//System.out.println(a + \" \" + num.get(a) + \" \" + sell.get(a));\n    \t\t}\n    \t}\n    \tSystem.out.println(l.size());\n    \tint[] a = new int[l.size()];\n    \tfor(int i = 0 ; i < l.size(); ++i) {\n    \t\ta[i] = l.get(i);\n    \t}\n    \tArrays.sort(a);\n    \tDouble pay = 0.0;\n    \tfor(int i = 0 ; i < a.length ; ++i) {\n    \t\tSystem.out.printf(\"%d %s %s %.2f %d %d\\n\", a[i], name.get(a[i]), brand.get(a[i]), price.get(a[i]), num.get(a[i]), sell.get(a[i]));\n    \t\tpay += price.get(a[i]) * sell.get(a[i]);\n    \t}\n    \tSystem.out.printf(\"%.2f\\n\",pay);\n    \tSystem.out.println(n);\n    \tint[] b = new int[n];\n    \tfor(int i = 0 ; i < n ; ++i) {\n    \t\tb[i] = warehouse.get(i);\n    \t}\n    \tArrays.sort(b);\n    \tfor(int i = 0 ; i < n ; ++i) {\n    \t\tSystem.out.printf(\"%d %s %s %.2f %d\\n\",b[i], name.get(b[i]), brand.get(b[i]), price.get(b[i]), num.get(b[i]));\n    \t}\n    \treader.close();\n    }\n}\n\n\n",
        "response": "ACCEPTED",
        "time_consume": "296",
        "memory_consume": "20200"
    },
    {
        "submission_id": "1475642291069833216",
        "user_id": "7103cb343a31c9a7c29014e7a9512a81047123301a6dd28c631d23671d34e450",
        "create_at": "2021-12-28 09:38:32",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430366644413882405",
        "problem_id": "1332686903442190336",
        "skill_id": "206",
        "code": "import java.util.*;\nclass Animal{\n\tString name;\n\tString age;\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(String age) {\n\t\tthis.age = age;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Animal [name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Animal\";\n\t} \n\n}\nclass Bird extends Animal{\n\tpublic Bird(String s1,String s2) {\n\t\tname=s1;\n\t\tage=s2;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Bird[name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Bird\";\n\t}\n}\n\nclass Dog extends Animal{\n\tString leg;\n\tpublic Dog(String s1,String s2,String s3) {\n\t\tname=s1;\n\t\tage=s2;\n\t\tleg=s3;\n\t}\n\tpublic String getLeg() {\n\t\treturn leg;\n\t}\n\tpublic void setLeg(String leg) {\n\t\tthis.leg = leg;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Dog[leg=\" + leg + \", name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Dog\";\n\t}   \n}\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tString s1,s2,s3;\n\t\tLinkedList<Animal> lk=new LinkedList<Animal>();\n\t\tfor(int i=0;i<n;i++) {\n\t\t   int k=sc.nextInt();\n\t\t   if(k==1) {\n\t\t\t   s1=sc.next();\n\t\t\t   s2=sc.next();\n\t\t\t   s3=sc.next();\n\t\t\t   Dog d=new Dog(s1,s2,s3);\n\t\t\t   lk.add(d);\n\t\t   }else {\n\t\t\t   s1=sc.next();\n\t\t\t   s2=sc.next();\n\t\t\t   Bird d=new Bird(s1,s2);\n\t\t\t   lk.add(d);\n\t\t   }\n\t\t}\n\t\t\n\t\tSystem.out.printf(\"[\");  \n       for(int i=0;i<n;i++) {\n    \t   if(i==0) {\n    \t\t System.out.printf(lk.get(i).toString());  \n    \t   }else\n    \t   {\n    \t\t   System.out.printf(\", \"+lk.get(i).toString());  \n    \t   } \t   \n    \t   \n       }\n       System.out.println(\"]\");  \n       int i;\n       s1=sc.next();\n       for(i=0;i<n;i++) {\n    \t  // System.out.println(lk.get(i).getName().length()); \n    \t  // System.out.println(s1.length());\n    \t   if(s1.equals(lk.get(i).getName())) {\n    \t\t   System.out.println(lk.get(i).play());  \n    \t\t   System.out.printf(lk.get(i).toString()); \n    \t\t   break;\n    \t   }\n       }\n       if(i==n) {\n    \t   System.out.print(\"no this one\");\n       }\n\t}\n\n}\n",
        "response": "ACCEPTED",
        "time_consume": "231",
        "memory_consume": "15816"
    },
    {
        "submission_id": "1475817032808386560",
        "user_id": "ced0774d4980be3b53706d6514b137eb6ccd4c786ea4434a6857c12d58228578",
        "create_at": "2021-12-28 21:12:54",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430366644418076691",
        "problem_id": "1425395137814978560",
        "skill_id": "206",
        "code": "import java.util.*;\npublic class Main{\n    public static void main(String[] args) {\n    \tScanner reader = new Scanner(System.in);\n    \tMap<Integer, Integer> num = new TreeMap<Integer, Integer>();\n    \tMap<Integer, String> name = new TreeMap<Integer, String>();\n    \tMap<Integer, String> brand = new TreeMap<Integer, String>();\n    \tMap<Integer, Double> price = new TreeMap<Integer, Double>();\n    \tMap<Integer, Integer> sell = new TreeMap<Integer, Integer>();\n    \tList<Integer> l = new ArrayList<Integer>();\n    \tList<Integer> warehouse = new ArrayList<Integer>();\n    \tint n = reader.nextInt();\n    \tfor(int i = 0 ; i < n ; ++i) {\n    \t\tint id = reader.nextInt();\n    \t\tString inform_name = reader.next();\n    \t\tString inform_brand = reader.next();\n    \t\tdouble inform_price = reader.nextDouble();\n    \t\tint inform_num = reader.nextInt();\n    \t\tname.put(id, inform_name);\n    \t\tnum.put(id, inform_num);\n    \t\tbrand.put(id, inform_brand);\n    \t\tprice.put(id, inform_price);\n    \t\twarehouse.add(id);\n    \t}\n    \tint m = reader.nextInt();\n    \twhile(m-- > 0) {\n    \t\tint a = reader.nextInt();\n    \t\tint b = reader.nextInt();\n    \t\tint c = reader.nextInt();\n    \t\tif(c == 1) {\n    \t\t\tif(l.contains(a) && warehouse.contains(a)) {\n    \t\t\t\tsell.put(a, sell.get(a) + (num.get(a) > b ? b : num.get(a)));\n    \t\t\t\tnum.put(a, num.get(a) - b > 0 ? num.get(a) - b : 0);\n    \t\t\t}\n    \t\t\telse if(warehouse.contains(a)){\n    \t\t\t\tl.add(a);\n    \t\t\t\tsell.put(a, num.get(a) > b ? b : num.get(a));\n    \t\t\t\tnum.put(a, num.get(a) - sell.get(a));\n    \t\t\t}\n    \t\t}\n    \t\telse if(c == 2) {\n    \t\t\tif(l.contains(a) && warehouse.contains(a)) {\n    \t\t\t\tint past_num = sell.get(a);\n    \t\t\t\tsell.put(a, sell.get(a) - b > 0 ? sell.get(a) - b : 0);\n    \t\t\t\tnum.put(a, num.get(a) + (b < past_num ? b : past_num));\n    \t\t\t\tif(sell.get(a) == 0) for(int i = 0 ; i < l.size() ; ++i) if(l.get(i) == a) l.remove(i);\n    \t\t\t}\n    \t\t}\n    \t\telse if(c == 3) {\n    \t\t\tif(l.contains(a) && warehouse.contains(a)) {\n    \t\t\t\tint past_num = sell.get(a);\n    \t\t\t\tsell.put(a, 0);\n    \t\t\t\tnum.put(a,  num.get(a) + past_num);\n    \t\t\t\tfor(int i = 0 ; i < l.size() ; ++i) if(l.get(i) == a) l.remove(i);\n    \t\t\t}\n    \t\t}\n    \t}\n    \tSystem.out.println(l.size());\n    \tint[] a = new int[l.size()];\n    \tfor(int i = 0 ; i < l.size(); ++i) a[i] = l.get(i);\n    \tArrays.sort(a);\n    \tDouble pay = 0.0;\n    \tfor(int i = 0 ; i < a.length ; ++i) {\n    \t\tSystem.out.printf(\"%d %s %s %.2f %d %d\\n\", a[i], name.get(a[i]), brand.get(a[i]), price.get(a[i]), num.get(a[i]), sell.get(a[i]));\n    \t\tpay += price.get(a[i]) * sell.get(a[i]);\n    \t}\n    \tSystem.out.printf(\"%.2f\\n\",pay);\n    \tSystem.out.println(n);\n    \tint[] b = new int[n];\n    \tfor(int i = 0 ; i < n ; ++i) b[i] = warehouse.get(i);\n    \tArrays.sort(b);\n    \tfor(int i = 0 ; i < n ; ++i) \n\t\t\tSystem.out.printf(\"%d %s %s %.2f %d\\n\",b[i], name.get(b[i]), brand.get(b[i]), price.get(b[i]), num.get(b[i]));\n    \treader.close();\n    }\n}",
        "response": "ACCEPTED",
        "time_consume": "331",
        "memory_consume": "19780"
    },
    {
        "submission_id": "1475817050086174720",
        "user_id": "ced0774d4980be3b53706d6514b137eb6ccd4c786ea4434a6857c12d58228578",
        "create_at": "2021-12-28 21:12:58",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430366644413882405",
        "problem_id": "1332686903442190336",
        "skill_id": "206",
        "code": "import java.util.*;\nclass Animal{\n\tString name;\n\tString age;\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(String age) {\n\t\tthis.age = age;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Animal [name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Animal\";\n\t} \n\n}\nclass Bird extends Animal{\n\tpublic Bird(String s1,String s2) {\n\t\tname=s1;\n\t\tage=s2;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Bird[name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Bird\";\n\t}\n}\n\nclass Dog extends Animal{\n\tString leg;\n\tpublic Dog(String s1,String s2,String s3) {\n\t\tname=s1;\n\t\tage=s2;\n\t\tleg=s3;\n\t}\n\tpublic String getLeg() {\n\t\treturn leg;\n\t}\n\tpublic void setLeg(String leg) {\n\t\tthis.leg = leg;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Dog[leg=\" + leg + \", name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Dog\";\n\t}   \n}\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tString s1,s2,s3;\n\t\tLinkedList<Animal> lk=new LinkedList<Animal>();\n\t\tfor(int i=0;i<n;i++) {\n\t\t   int k=sc.nextInt();\n\t\t   if(k==1) {\n\t\t\t   s1=sc.next();\n\t\t\t   s2=sc.next();\n\t\t\t   s3=sc.next();\n\t\t\t   Dog d=new Dog(s1,s2,s3);\n\t\t\t   lk.add(d);\n\t\t   }else {\n\t\t\t   s1=sc.next();\n\t\t\t   s2=sc.next();\n\t\t\t   Bird d=new Bird(s1,s2);\n\t\t\t   lk.add(d);\n\t\t   }\n\t\t}\n\t\t\n\t\tSystem.out.printf(\"[\");  \n       for(int i=0;i<n;i++) {\n    \t   if(i==0) {\n    \t\t System.out.printf(lk.get(i).toString());  \n    \t   }else\n    \t   {\n    \t\t   System.out.printf(\", \"+lk.get(i).toString());  \n    \t   } \t   \n    \t   \n       }\n       System.out.println(\"]\");  \n       int i;\n       s1=sc.next();\n       for(i=0;i<n;i++) {\n    \t  // System.out.println(lk.get(i).getName().length()); \n    \t  // System.out.println(s1.length());\n    \t   if(s1.equals(lk.get(i).getName())) {\n    \t\t   System.out.println(lk.get(i).play());  \n    \t\t   System.out.printf(lk.get(i).toString()); \n    \t\t   break;\n    \t   }\n       }\n       if(i==n) {\n    \t   System.out.print(\"no this one\");\n       }\n\t}\n\n}\n",
        "response": "ACCEPTED",
        "time_consume": "235",
        "memory_consume": "15352"
    },
    {
        "submission_id": "1477218529416962048",
        "user_id": "3206bb58dda8c552fc372555fc405f471a1bc56fbe0fe5f79ba6dccc845defb8",
        "create_at": "2022-01-01 18:01:57",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1430366644413882405",
        "problem_id": "1332686903442190336",
        "skill_id": "206",
        "code": "import java.util.*;\nclass Animal{\n\tString name;\n\tString age;\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic String getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(String age) {\n\t\tthis.age = age;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Animal [name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Animal\";\n\t} \n\n}\nclass Bird extends Animal{\n\tpublic Bird(String s1,String s2) {\n\t\tname=s1;\n\t\tage=s2;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Bird[name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Bird\";\n\t}\n}\n\nclass Dog extends Animal{\n\tString leg;\n\tpublic Dog(String s1,String s2,String s3) {\n\t\tname=s1;\n\t\tage=s2;\n\t\tleg=s3;\n\t}\n\tpublic String getLeg() {\n\t\treturn leg;\n\t}\n\tpublic void setLeg(String leg) {\n\t\tthis.leg = leg;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Dog[leg=\" + leg + \", name=\" + name + \", age=\" + age + \"]\";\n\t}\n\tpublic String play() {\n\t\treturn \"Dog\";\n\t}   \n}\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tString s1,s2,s3;\n\t\tLinkedList<Animal> lk=new LinkedList<Animal>();\n\t\tfor(int i=0;i<n;i++) {\n\t\t   int k=sc.nextInt();\n\t\t   if(k==1) {\n\t\t\t   s1=sc.next();\n\t\t\t   s2=sc.next();\n\t\t\t   s3=sc.next();\n\t\t\t   Dog d=new Dog(s1,s2,s3);\n\t\t\t   lk.add(d);\n\t\t   }else {\n\t\t\t   s1=sc.next();\n\t\t\t   s2=sc.next();\n\t\t\t   Bird d=new Bird(s1,s2);\n\t\t\t   lk.add(d);\n\t\t   }\n\t\t}\n\t\t\n\t\tSystem.out.printf(\"[\");  \n       for(int i=0;i<n;i++) {\n    \t   if(i==0) {\n    \t\t System.out.printf(lk.get(i).toString());  \n    \t   }else\n    \t   {\n    \t\t   System.out.printf(\", \"+lk.get(i).toString());  \n    \t   } \t   \n    \t   \n       }\n       System.out.println(\"]\");  \n       int i;\n       s1=sc.next();\n       for(i=0;i<n;i++) {\n    \t  // System.out.println(lk.get(i).getName().length()); \n    \t  // System.out.println(s1.length());\n    \t   if(s1.equals(lk.get(i).getName())) {\n    \t\t   System.out.println(lk.get(i).play());  \n    \t\t   System.out.printf(lk.get(i).toString()); \n    \t\t   break;\n    \t   }\n       }\n       if(i==n) {\n    \t   System.out.print(\"no this one\");\n       }\n\t}\n\n}\n",
        "response": "ACCEPTED",
        "time_consume": "218",
        "memory_consume": "15496"
    },
    {
        "submission_id": "1412318704663851008",
        "user_id": "443c6f8a11eafccfca9161eb19f9c10f7a92e5e0e3ed45eb7b2644b74e18d5bd",
        "create_at": "2021-07-06 15:53:13",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1410607068738502686",
        "problem_id": "1232973781593665536",
        "skill_id": "177",
        "code": "import java.util.Scanner;\npublic class Main {  \n    public static void main(String [] args) {\n        Scanner st=new Scanner(System.in);\n        int n=st.nextInt();\n        int a,b,c;\n        a=n%10;\n        b=(n%100)/10;\n        c=(n%1000)/100;\n        System.out.println(a+b+c);\n}}\n",
        "response": "ACCEPTED",
        "time_consume": "396",
        "memory_consume": "15096"
    },
    {
        "submission_id": "1192370037086031872",
        "user_id": "09c2df85962fee502eb10ac7f3ad21c594269e5c8818c4d29947638d0c08042b",
        "create_at": "2019-11-07 17:15:42",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.io.*;\r\nimport java.util.Scanner;\r\npublic class Main {\r\n\tprivate static Scanner cin = new Scanner(System.in);\r\n\tprivate static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out), true);\r\n\tpublic static void main(String[] args) {\r\n\t\tString name = cin.next();\r\n\t\tint age = cin.nextInt();\r\n\t\tString sex = cin.next();\r\n\t\tStudent stu = new Student(name, sex, age);\r\n\t\tout.println(stu.toString());\r\n\t\tout.close();\r\n\t}\r\n}\r\nclass Student {\r\n\tprivate String name;\r\n\tprivate String sex;\r\n\tprivate int age;\r\n\tStudent(String name, String sex, int age) {\r\n\t\tthis.name = name;\r\n\t\tthis.sex = sex;\r\n\t\tthis.age = age;\r\n\t}\r\n\tpublic String toString() {\r\n\t\treturn \"Student [name='\" + this.name + \"', sex='\" + this.sex + \"', age=\" + this.age + \"]\";\r\n\t}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "226",
        "memory_consume": "10892"
    },
    {
        "submission_id": "1192378308110913536",
        "user_id": "09c2df85962fee502eb10ac7f3ad21c594269e5c8818c4d29947638d0c08042b",
        "create_at": "2019-11-07 17:48:34",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.io.*;\r\npublic class Main {\r\n    private static StreamTokenizer cin = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\r\n    private static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out), true);\r\n    public static void main(String[] args) throws IOException, CheckMarkException {\r\n        cin.nextToken();\r\n        int numOfStudents = (int) cin.nval;\r\n        int goodStu = 0, badStu = 0, nowCheck;\r\n        for (int i = 0; i < numOfStudents; ++i) {\r\n            cin.nextToken();\r\n            nowCheck = (int) cin.nval;\r\n            if (nowCheck > 59 && nowCheck < 101) {\r\n                goodStu += 1;\r\n            } \r\n            else if (nowCheck > -1 && nowCheck < 60) {\r\n                badStu += 1;\r\n            }\r\n            try {\r\n                if (nowCheck < 0 || nowCheck > 100) {\r\n                    i -= 1;\r\n                    throw new CheckMarkException(nowCheck);\r\n                }\r\n            } \r\n            catch (CheckMarkException o) {\r\n                o.printStackTrace(o.toString());\r\n            }\r\n        }\r\n        out.println(goodStu);\r\n        out.println(badStu);\r\n    }\r\n}\r\nclass CheckMarkException extends Exception {\r\n    private int errorNum;\r\n    public CheckMarkException() {\r\n        super();\r\n    }\r\n    CheckMarkException(int nowCheck) {\r\n        this.errorNum = nowCheck;\r\n    }\r\n    public int getErrorNum() {\r\n        return errorNum;\r\n    }\r\n    public void setErrorNum(int errorNum) {\r\n        this.errorNum = errorNum;\r\n    }\r\n    public String toString() {\r\n        return String.valueOf(errorNum) + \"invalid!\";\r\n    }\r\n    void printStackTrace(String toString) {\r\n        System.out.println(toString);\r\n    }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "133",
        "memory_consume": "9536"
    },
    {
        "submission_id": "1192392885649346560",
        "user_id": "09c2df85962fee502eb10ac7f3ad21c594269e5c8818c4d29947638d0c08042b",
        "create_at": "2019-11-07 18:46:30",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.Scanner;\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end)throws IllegalArgumentException{\r\n        if(begin>=end)   {\r\n            throw new IllegalArgumentException(\"begin:\"+begin+\" >= end:\"+end);\r\n        }\r\n        else if(begin<0){\r\n            throw new IllegalArgumentException(\"begin:\"+begin+\" < 0\");\r\n        }\r\n        else if(end>arr.length){\r\n            throw new IllegalArgumentException(\"end:\"+end+\" > arr.length\");\r\n        }\r\n\r\n        double max=0;\r\n\r\n        for(int i=begin;i<end;i++){\r\n            if(max<arr[i])\r\n                 max=arr[i];\r\n        }\r\n        return max;\r\n    }\r\n}\r\n\r\npublic  class Main{\r\n    public  static  void main(String argn[]){\r\n        Scanner scan = new Scanner(System.in);\r\n        int n = scan.nextInt();\r\n        double[] arr =new double[n];\r\n\r\n        for(int i=0;i<n;i++){\r\n            arr[i]=scan.nextInt();\r\n        }\r\n\r\n       while(true){\r\n           int begin,end;\r\n           int m=0;\r\n           ArrayUtils hsj[] =new ArrayUtils[100];\r\n           hsj[m++]=new ArrayUtils();\r\n           try{\r\n               begin = Integer.parseInt(scan.next());\r\n               end = Integer.parseInt(scan.next());\r\n           } catch(NumberFormatException e){\r\n               break;\r\n           }\r\n\r\n           try {\r\n               System.out.println(hsj[m].findMax(arr,begin,end));\r\n\r\n           } catch (IllegalArgumentException e) {\r\n               System.out.println(e.toString());\r\n           }\r\n       }\r\n\r\n       try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n\r\n       }\r\n\r\n\r\n\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "169",
        "memory_consume": "10852"
    },
    {
        "submission_id": "1192393357856673792",
        "user_id": "09c2df85962fee502eb10ac7f3ad21c594269e5c8818c4d29947638d0c08042b",
        "create_at": "2019-11-07 18:48:22",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.Scanner;\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end)throws IllegalArgumentException{\r\n        if(begin>=end){\r\n            throw new IllegalArgumentException(\"begin:\"+begin+\" >= end:\"+end);\r\n        }\r\n        else if(begin<0){\r\n            throw new IllegalArgumentException(\"begin:\"+begin+\" < 0\");\r\n        }\r\n        else if(end>arr.length){\r\n            throw new IllegalArgumentException(\"end:\"+end+\" > arr.length\");\r\n        }\r\n        double max=0;\r\n        for(int i=begin;i<end;i++){\r\n            if(max<arr[i])\r\n                 max=arr[i];\r\n        }\r\n        return max;\r\n    }\r\n}\r\npublic class Main{\r\n    public  static  void main(String argn[]){\r\n        Scanner scan = new Scanner(System.in);\r\n        int n = scan.nextInt();\r\n        double[] arr =new double[n];\r\n        for(int i=0;i<n;i++){\r\n            arr[i]=scan.nextInt();\r\n        }\r\n        while(true){\r\n            int begin,end;\r\n            int m=0;\r\n            ArrayUtils hsj[] =new ArrayUtils[100];\r\n            hsj[m++]=new ArrayUtils();\r\n            try{\r\n                begin = Integer.parseInt(scan.next());\r\n                end = Integer.parseInt(scan.next());\r\n            } \r\n            catch(NumberFormatException e){\r\n                break;\r\n            }\r\n            try {\r\n                System.out.println(hsj[m].findMax(arr,begin,end));\r\n            } \r\n            catch (IllegalArgumentException e) {\r\n                System.out.println(e.toString());\r\n            }\r\n        }\r\n        try{\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } \r\n        catch (Exception e1) {}\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "113",
        "memory_consume": "10764"
    },
    {
        "submission_id": "1195910549764116480",
        "user_id": "8b6656b034e0bef074c88f62bc8aeb54ef7b83527f5d835e5d2cb571dddb6a9d",
        "create_at": "2019-11-17 11:44:26",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}",
        "response": "ACCEPTED",
        "time_consume": "222",
        "memory_consume": "10848"
    },
    {
        "submission_id": "1195911366567071744",
        "user_id": "8b6656b034e0bef074c88f62bc8aeb54ef7b83527f5d835e5d2cb571dddb6a9d",
        "create_at": "2019-11-17 11:47:41",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "291",
        "memory_consume": "10944"
    },
    {
        "submission_id": "1196388443166674944",
        "user_id": "a377e7400bfe0b5dc494bda185060243f3f7e06039d6868b5e4d4ed2eaf3cd45",
        "create_at": "2019-11-18 19:23:24",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] argv) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int n = sc.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = sc.nextDouble();\r\n        }\r\n        while (!sc.hasNext(\"end\")) {\r\n            int begin = sc.nextInt();\r\n            int end = sc.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        sc.close();\r\n    }\r\n\r\n}\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "99",
        "memory_consume": "12680"
    },
    {
        "submission_id": "1196778654958686208",
        "user_id": "8b6656b034e0bef074c88f62bc8aeb54ef7b83527f5d835e5d2cb571dddb6a9d",
        "create_at": "2019-11-19 21:13:58",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "105",
        "memory_consume": "12412"
    },
    {
        "submission_id": "1196779119805009920",
        "user_id": "8b6656b034e0bef074c88f62bc8aeb54ef7b83527f5d835e5d2cb571dddb6a9d",
        "create_at": "2019-11-19 21:15:49",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = scanner.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "296",
        "memory_consume": "10696"
    },
    {
        "submission_id": "1197063803449446400",
        "user_id": "f4a4844223db897591c4c582916e6daa7943aedc5b8358890516391ce3969773",
        "create_at": "2019-11-20 16:07:03",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\tScanner in=new Scanner(System.in);\r\n\t\tString name=in.next();\r\n\t\tint age=in.nextInt();\r\n\t\tString sex=in.next();\r\n\t\tStudent11 s=new Student11(name, sex, age);\r\n\t\tSystem.out.println(s);\r\n\t}\r\n\r\n}\r\n\r\nclass Student11\r\n{\r\n\tprivate String name;\r\n\tprivate String sex;\r\n\tprivate int age;\r\n\t\r\n\tpublic Student11(String name, String sex, int age) {\r\n\t\tsuper();\r\n\t\tthis.name = name;\r\n\t\tthis.sex = sex;\r\n\t\tthis.age = age;\r\n\t}\r\n\t\r\n\t\r\n\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\r\n\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\r\n\r\n\tpublic String getSex() {\r\n\t\treturn sex;\r\n\t}\r\n\r\n\r\n\tpublic void setSex(String sex) {\r\n\t\tthis.sex = sex;\r\n\t}\r\n\r\n\r\n\tpublic int getAge() {\r\n\t\treturn age;\r\n\t}\r\n\r\n\r\n\r\n\tpublic void setAge(int age) {\r\n\t\tthis.age = age;\r\n\t}\r\n\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"Student [name=\" +'\\\\''+ name +'\\\\''+ \", sex=\" +'\\\\''+ sex+'\\\\'' + \", age=\" + age + \"]\";\r\n\t}\r\n\t\r\n\t\r\n\t\r\n}",
        "response": "ACCEPTED",
        "time_consume": "244",
        "memory_consume": "10896"
    },
    {
        "submission_id": "1197429022453469184",
        "user_id": "a377e7400bfe0b5dc494bda185060243f3f7e06039d6868b5e4d4ed2eaf3cd45",
        "create_at": "2019-11-21 16:18:18",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n    public Student() {\r\n    }\r\n    public String getName() {\r\n        return name;\r\n    }\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] argv) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}",
        "response": "ACCEPTED",
        "time_consume": "206",
        "memory_consume": "10580"
    },
    {
        "submission_id": "1197501430321451008",
        "user_id": "a377e7400bfe0b5dc494bda185060243f3f7e06039d6868b5e4d4ed2eaf3cd45",
        "create_at": "2019-11-21 21:06:01",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] argv) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = sc.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        sc.close();\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "351",
        "memory_consume": "10804"
    },
    {
        "submission_id": "1197507924035178496",
        "user_id": "321c5603d7cd4a61e894f48a05993b4eb5613b6d7b141d14e653532588bf9033",
        "create_at": "2019-11-21 21:31:49",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.*;\r\npublic class Main{\r\n\r\n     public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sex=sc.next();\r\n        student aa=new student(name,sex,age);\r\n        System.out.println(aa.toSting());\r\n    }\r\n}\r\nclass student{\r\n\t private String name;\r\n\t private String sex;\r\n\t private int age;\r\n\t public student( String name,String sex,int age)\r\n\t {\r\n\t\t this.name=name;\r\n\t\t this.sex=sex;\r\n\t\t this.age=age;\r\n\t }\r\n\t public String toSting()\r\n\t {\r\n\t\t return \"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n\t }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "219",
        "memory_consume": "10752"
    },
    {
        "submission_id": "1197512238828949504",
        "user_id": "321c5603d7cd4a61e894f48a05993b4eb5613b6d7b141d14e653532588bf9033",
        "create_at": "2019-11-21 21:48:58",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\npublic class Main{\r\n\t\r\n\tpublic static void main(String []aars)\r\n\t{\r\n\t\tScanner in=new Scanner(System.in); \r\n\t\tint n=Integer.parseInt(in.nextLine());\r\n        double[]a=new double[n];\r\n        String str=in.nextLine();\r\n        String []str1=str.split(\" \");\r\n        for(int i=0;i<n;i++)\r\n        a[i]=Double.parseDouble(str1[i]);\r\n        while(true)\r\n        {     \r\n        try {\r\n        \tString ss=in.nextLine();\r\n            if(Character.isLetter(ss.charAt(0)))\r\n            { try {\r\n                System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n            } catch (Exception e1) {\r\n            } \r\n            \treturn;\r\n            }\r\n            String []s=ss.split(\" \");\r\n        \tint begin=Integer.parseInt(s[0]);\r\n        \tint end=Integer.parseInt(s[1]);\r\n        \tSystem.out.println(ArrayUtils.findMax(a, begin, end-1));\r\n        }\r\n        catch(IllegalArgumentException e)\r\n        {\r\n        \tSystem.out.println(e);\r\n        }\r\n        }\r\n        \r\n}\r\n}\r\nclass ArrayUtils{\r\npublic static double findMax(double[] arr,int begin, int end)throws IllegalArgumentException\r\n{\r\n\tif(begin>end) throw new IllegalArgumentException(\"begin:\"+begin+\" >= end:\"+(end+1));\r\n\tif(begin<0)  throw new IllegalArgumentException(\"begin:\"+begin+\" < 0\");\r\n\tif(end>=arr.length) throw new IllegalArgumentException(\"end:\"+(end+1)+\" > arr.length\");\r\n\tdouble temp=0;\r\n\tfor(int i=begin;i<end+1;i++)\r\n\t{\r\n\t\tif(arr[i]>temp)\r\n\t\t\ttemp=arr[i];\r\n\t}\r\n\treturn temp;\r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "101",
        "memory_consume": "10668"
    },
    {
        "submission_id": "1197512361961132032",
        "user_id": "321c5603d7cd4a61e894f48a05993b4eb5613b6d7b141d14e653532588bf9033",
        "create_at": "2019-11-21 21:49:27",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner in = new Scanner(System.in);\r\n        int n= in.nextInt();\r\n        int jige=0,no=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n        \tint temp=in.nextInt();\r\n        \tif(temp>100||temp<0)\r\n        \t{\r\n        \t\tSystem.out.println(temp+\"invalid!\");\r\n        \t\ti--;\r\n        \t}\r\n        \telse\r\n        \t{\r\n        \t\tif(temp>=60)\r\n        \t\t\tjige++;\r\n        \t\telse\r\n        \t\t\tno++;\r\n        \t}\r\n        }\r\n        System.out.println(jige+\"\\n\"+no);\r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "184",
        "memory_consume": "10656"
    },
    {
        "submission_id": "1197518033079570432",
        "user_id": "dbbe4b9118c12c948877cc366711d909d4ce4c0a86ff3e78ff36f024a4e69703",
        "create_at": "2019-11-21 22:11:59",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "\r\n\r\n\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = scanner.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n\r\n\r\n",
        "response": "ACCEPTED",
        "time_consume": "347",
        "memory_consume": "10768"
    },
    {
        "submission_id": "1197520894211461120",
        "user_id": "dbbe4b9118c12c948877cc366711d909d4ce4c0a86ff3e78ff36f024a4e69703",
        "create_at": "2019-11-21 22:23:22",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "\r\n\r\nimport java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "209",
        "memory_consume": "10744"
    },
    {
        "submission_id": "1197521426653188096",
        "user_id": "dbbe4b9118c12c948877cc366711d909d4ce4c0a86ff3e78ff36f024a4e69703",
        "create_at": "2019-11-21 22:25:29",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "\r\n\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "129",
        "memory_consume": "12636"
    },
    {
        "submission_id": "1197521582408667136",
        "user_id": "dbbe4b9118c12c948877cc366711d909d4ce4c0a86ff3e78ff36f024a4e69703",
        "create_at": "2019-11-21 22:26:06",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "\r\nimport java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "190",
        "memory_consume": "10760"
    },
    {
        "submission_id": "1197532364563353600",
        "user_id": "b5e1298da15745e843bf8cdb0c0fffe40b4e2fda1e135b4b0d4c6fff9fd389fe",
        "create_at": "2019-11-21 23:08:56",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}",
        "response": "ACCEPTED",
        "time_consume": "174",
        "memory_consume": "10960"
    },
    {
        "submission_id": "1197533027192082432",
        "user_id": "b5e1298da15745e843bf8cdb0c0fffe40b4e2fda1e135b4b0d4c6fff9fd389fe",
        "create_at": "2019-11-21 23:11:34",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "130",
        "memory_consume": "12752"
    },
    {
        "submission_id": "1197533180372258816",
        "user_id": "b5e1298da15745e843bf8cdb0c0fffe40b4e2fda1e135b4b0d4c6fff9fd389fe",
        "create_at": "2019-11-21 23:12:11",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "\r\nimport java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "186",
        "memory_consume": "10876"
    },
    {
        "submission_id": "1197534284237574144",
        "user_id": "32870c1c458155c9f47081b3d562279dea35f6ec9b622cf6df361811cd7c8097",
        "create_at": "2019-11-21 23:16:34",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}",
        "response": "ACCEPTED",
        "time_consume": "199",
        "memory_consume": "10820"
    },
    {
        "submission_id": "1197776574847717376",
        "user_id": "2b7c39b9925f30e7b54807700a280a7c8b2c62d28be27bf082b544aed66d9b27",
        "create_at": "2019-11-22 15:19:21",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n\r\nclass Student{\r\n\tprivate  String name;\r\n\tprivate  String sex;\r\n\tprivate  int age;\r\n\tpublic Student(String name,  int age, String sex) {\r\n\t\tthis.name = name;\r\n\t\tthis.age = age;\r\n\t\tthis.sex = sex;\r\n\t}\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"Student [name='\" + name + \"', sex='\" + sex + \"', age=\" + age + \"]\";\r\n\t}\r\n\t\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner in=new Scanner(System.in);\r\n        String s=in.nextLine();\r\n        String g[]=s.split(\" \");\r\n        Student st=new Student(g[0],Integer.parseInt(g[1]),g[2]);\r\n        System.out.println(st.toString());\r\n    }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "250",
        "memory_consume": "10716"
    },
    {
        "submission_id": "1197776910127796224",
        "user_id": "2b7c39b9925f30e7b54807700a280a7c8b2c62d28be27bf082b544aed66d9b27",
        "create_at": "2019-11-22 15:20:41",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.Scanner;\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end)throws IllegalArgumentException{\r\n        if(begin>=end)   {\r\n            throw new IllegalArgumentException(\"begin:\"+begin+\" >= end:\"+end);\r\n        }\r\n        else if(begin<0){\r\n            throw new IllegalArgumentException(\"begin:\"+begin+\" < 0\");\r\n        }\r\n        else if(end>arr.length){\r\n            throw new IllegalArgumentException(\"end:\"+end+\" > arr.length\");\r\n        }\r\n\r\n        double max=0;\r\n\r\n        for(int i=begin;i<end;i++){\r\n            if(max<arr[i])\r\n                 max=arr[i];\r\n        }\r\n        return max;\r\n    }\r\n}\r\n\r\npublic  class Main{\r\n    public  static  void main(String argn[]){\r\n        Scanner scan = new Scanner(System.in);\r\n        int n = scan.nextInt();\r\n        double[] arr =new double[n];\r\n\r\n        for(int i=0;i<n;i++){\r\n            arr[i]=scan.nextInt();\r\n        }\r\n\r\n       while(true){\r\n           int begin,end;\r\n           int m=0;\r\n           ArrayUtils hsj[] =new ArrayUtils[100];\r\n           hsj[m++]=new ArrayUtils();\r\n           try{\r\n               begin = Integer.parseInt(scan.next());\r\n               end = Integer.parseInt(scan.next());\r\n           } catch(NumberFormatException e){\r\n               break;\r\n           }\r\n           try {\r\n               System.out.println(hsj[m].findMax(arr,begin,end));\r\n\r\n           } catch (IllegalArgumentException e) {\r\n               System.out.println(e.toString());\r\n           }\r\n       }\r\n\r\n       try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n\r\n       }\r\n    }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "116",
        "memory_consume": "11152"
    },
    {
        "submission_id": "1197777036846108672",
        "user_id": "2b7c39b9925f30e7b54807700a280a7c8b2c62d28be27bf082b544aed66d9b27",
        "create_at": "2019-11-22 15:21:11",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int n=in.nextInt();\r\n        int good = 0,nogood = 0,sorce = 0,i=0;\r\n        for(i=0; i<n; i++) {\r\n        \tsorce=in.nextInt();\r\n        \ttry {\r\n        \t\tif(sorce<0|| sorce>100) {\r\n        \t\t\tthrow new invalid();\r\n        \t\t}\r\n        \t}catch(invalid e){\r\n        \t\ti--;\r\n        \t\tSystem.out.println(sorce+\"invalid!\");\r\n        \t}\r\n        \tif(sorce>=60 && sorce<=100) {\r\n        \t\tgood++;\r\n        \t}\r\n        \telse if(sorce<60 && sorce>=0) {\r\n        \t\tnogood++;\r\n        \t}\r\n        }\r\n        System.out.println(good+\"\\n\"+nogood);\r\n    }\r\n}\r\nclass invalid extends Throwable{\r\n}",
        "response": "ACCEPTED",
        "time_consume": "235",
        "memory_consume": "10880"
    },
    {
        "submission_id": "1197777571603091456",
        "user_id": "2b7c39b9925f30e7b54807700a280a7c8b2c62d28be27bf082b544aed66d9b27",
        "create_at": "2019-11-22 15:23:18",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args){\r\n    \tScanner in=new Scanner(System.in);\r\n    \tint b[]= {1,2,3,4,5,6,7};\r\n    \tint sum=0;\r\n    \tint a[]=new int[7];\r\n    \tfor(int i=0; i<7; i++) {\r\n    \t\ta[i]=in.nextInt();\r\n    \t}\r\n    \tfor(int i=0; i<7; i++) {\r\n    \t\tsum+=a[i]*b[i];\r\n        }\r\n    \tfor(int i=6; i>=1; i--) {\r\n    \t    if(a[i]>0) {\r\n    \t\t\tsum+=a[0]*b[i];\r\n    \t\t    break;\r\n    \t    }\r\n        }\r\n        System.out.println(sum);\r\n    }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "286",
        "memory_consume": "10832"
    },
    {
        "submission_id": "1197784074074525696",
        "user_id": "bbe62134d8e632e5696b1487d0d580f52aba70b265d6e27344dc12fa606d3bf8",
        "create_at": "2019-11-22 15:49:09",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}",
        "response": "ACCEPTED",
        "time_consume": "230",
        "memory_consume": "10656"
    },
    {
        "submission_id": "1198093210880380928",
        "user_id": "b5e1298da15745e843bf8cdb0c0fffe40b4e2fda1e135b4b0d4c6fff9fd389fe",
        "create_at": "2019-11-23 12:17:32",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = scanner.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "344",
        "memory_consume": "10744"
    },
    {
        "submission_id": "1198121924368338944",
        "user_id": "a377e7400bfe0b5dc494bda185060243f3f7e06039d6868b5e4d4ed2eaf3cd45",
        "create_at": "2019-11-23 14:11:38",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] argv) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "216",
        "memory_consume": "10972"
    },
    {
        "submission_id": "1198157169759162368",
        "user_id": "a5227de4dfec818b5117c8de7b2bca468a18089e00b96d7b9093342b70cb1bb4",
        "create_at": "2019-11-23 16:31:41",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}",
        "response": "ACCEPTED",
        "time_consume": "177",
        "memory_consume": "10500"
    },
    {
        "submission_id": "1198159808957845504",
        "user_id": "a5227de4dfec818b5117c8de7b2bca468a18089e00b96d7b9093342b70cb1bb4",
        "create_at": "2019-11-23 16:42:11",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "104",
        "memory_consume": "12516"
    },
    {
        "submission_id": "1198160110553468928",
        "user_id": "a5227de4dfec818b5117c8de7b2bca468a18089e00b96d7b9093342b70cb1bb4",
        "create_at": "2019-11-23 16:43:23",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "\r\nimport java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "184",
        "memory_consume": "10916"
    },
    {
        "submission_id": "1198179273728659456",
        "user_id": "42ac077bfc61fbbc18f2195b73cc7fec2c8a52d17d89a5f21d16993ab5a47957",
        "create_at": "2019-11-23 17:59:31",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.*;\r\npublic class Main{\r\n\r\n     public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sex=sc.next();\r\n        student aa=new student(name,sex,age);\r\n        System.out.println(aa.toSting());\r\n    }\r\n}\r\nclass student{\r\n\t private String name;\r\n\t private String sex;\r\n\t private int age;\r\n\t public student( String name,String sex,int age)\r\n\t {\r\n\t\t this.name=name;\r\n\t\t this.sex=sex;\r\n\t\t this.age=age;\r\n\t }\r\n\t public String toSting()\r\n\t {\r\n\t\t return \"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n\t }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "189",
        "memory_consume": "10788"
    },
    {
        "submission_id": "1198180070063411200",
        "user_id": "42ac077bfc61fbbc18f2195b73cc7fec2c8a52d17d89a5f21d16993ab5a47957",
        "create_at": "2019-11-23 18:02:41",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\npublic class Main{\r\n\t\r\n\tpublic static void main(String []aars)\r\n\t{\r\n\t\tScanner in=new Scanner(System.in); \r\n\t\tint n=Integer.parseInt(in.nextLine());\r\n        double[]a=new double[n];\r\n        String str=in.nextLine();\r\n        String []str1=str.split(\" \");\r\n        for(int i=0;i<n;i++)\r\n        a[i]=Double.parseDouble(str1[i]);\r\n        while(true)\r\n        {     \r\n        try {\r\n        \tString ss=in.nextLine();\r\n            if(Character.isLetter(ss.charAt(0)))\r\n            { try {\r\n                System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n            } catch (Exception e1) {\r\n            } \r\n            \treturn;\r\n            }\r\n            String []s=ss.split(\" \");\r\n        \tint begin=Integer.parseInt(s[0]);\r\n        \tint end=Integer.parseInt(s[1]);\r\n        \tSystem.out.println(ArrayUtils.findMax(a, begin, end-1));\r\n        }\r\n        catch(IllegalArgumentException e)\r\n        {\r\n        \tSystem.out.println(e);\r\n        }\r\n        }\r\n        \r\n}\r\n}\r\nclass ArrayUtils{\r\npublic static double findMax(double[] arr,int begin, int end)throws IllegalArgumentException\r\n{\r\n\tif(begin>end) throw new IllegalArgumentException(\"begin:\"+begin+\" >= end:\"+(end+1));\r\n\tif(begin<0)  throw new IllegalArgumentException(\"begin:\"+begin+\" < 0\");\r\n\tif(end>=arr.length) throw new IllegalArgumentException(\"end:\"+(end+1)+\" > arr.length\");\r\n\tdouble temp=0;\r\n\tfor(int i=begin;i<end+1;i++)\r\n\t{\r\n\t\tif(arr[i]>temp)\r\n\t\t\ttemp=arr[i];\r\n\t}\r\n\treturn temp;\r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "131",
        "memory_consume": "10960"
    },
    {
        "submission_id": "1198180254629564416",
        "user_id": "42ac077bfc61fbbc18f2195b73cc7fec2c8a52d17d89a5f21d16993ab5a47957",
        "create_at": "2019-11-23 18:03:25",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner in = new Scanner(System.in);\r\n        int n= in.nextInt();\r\n        int jige=0,no=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n        \tint temp=in.nextInt();\r\n        \tif(temp>100||temp<0)\r\n        \t{\r\n        \t\tSystem.out.println(temp+\"invalid!\");\r\n        \t\ti--;\r\n        \t}\r\n        \telse\r\n        \t{\r\n        \t\tif(temp>=60)\r\n        \t\t\tjige++;\r\n        \t\telse\r\n        \t\t\tno++;\r\n        \t}\r\n        }\r\n        System.out.println(jige+\"\\n\"+no);\r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "235",
        "memory_consume": "10752"
    },
    {
        "submission_id": "1198222090966470656",
        "user_id": "a5227de4dfec818b5117c8de7b2bca468a18089e00b96d7b9093342b70cb1bb4",
        "create_at": "2019-11-23 20:49:40",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = scanner.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "349",
        "memory_consume": "10872"
    },
    {
        "submission_id": "1198245444834365440",
        "user_id": "321c5603d7cd4a61e894f48a05993b4eb5613b6d7b141d14e653532588bf9033",
        "create_at": "2019-11-23 22:22:28",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\npublic class Main{\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner in= new Scanner(System.in);\r\n\t    int []aa=new int[7];\r\n\t    for(int i=0;i<7;i++)\r\n\t    \taa[i]=in.nextInt();\r\n\t    int w=0,sum=0;\r\n\t    for(int i=6;i>0;i--)\r\n\t    \tif(aa[i]>0)\r\n\t    \t{\r\n\t    \t\tw=i;\r\n\t    \t\tbreak;\r\n\t    \t}\r\n             if(w==0)\r\n\t    \tsum=aa[0];\r\n\t    else\r\n\t    {\r\n\t   for(int s=aa[0];s>0;s--)\r\n\t   {\r\n\t\t   sum+=w+2;\r\n\t   }\r\n\t   for(int i=1;i<7;i++)\r\n\t   {\r\n\t\t   sum+=aa[i]*(i+1);\r\n\t   }\r\n        }\r\n\t   System.out.println(sum);\r\n\t}\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "285",
        "memory_consume": "10716"
    },
    {
        "submission_id": "1198429977567367168",
        "user_id": "ec344ffcd7ad65a7a589c620802b31fc2375916baf599659c6f32dfdd5f19d26",
        "create_at": "2019-11-24 10:35:44",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}",
        "response": "ACCEPTED",
        "time_consume": "192",
        "memory_consume": "10772"
    },
    {
        "submission_id": "1198430713269260288",
        "user_id": "ec344ffcd7ad65a7a589c620802b31fc2375916baf599659c6f32dfdd5f19d26",
        "create_at": "2019-11-24 10:38:39",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "133",
        "memory_consume": "12768"
    },
    {
        "submission_id": "1198430793414021120",
        "user_id": "ec344ffcd7ad65a7a589c620802b31fc2375916baf599659c6f32dfdd5f19d26",
        "create_at": "2019-11-24 10:38:58",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "\r\nimport java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "227",
        "memory_consume": "10980"
    },
    {
        "submission_id": "1198431646397042688",
        "user_id": "ec344ffcd7ad65a7a589c620802b31fc2375916baf599659c6f32dfdd5f19d26",
        "create_at": "2019-11-24 10:42:22",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = scanner.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "349",
        "memory_consume": "10816"
    },
    {
        "submission_id": "1198474510644613120",
        "user_id": "42ac077bfc61fbbc18f2195b73cc7fec2c8a52d17d89a5f21d16993ab5a47957",
        "create_at": "2019-11-24 13:32:41",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\npublic class Main{\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner in= new Scanner(System.in);\r\n\t    int []aa=new int[7];\r\n\t    for(int i=0;i<7;i++)\r\n\t    \taa[i]=in.nextInt();\r\n\t    int w=0,sum=0;\r\n\t    for(int i=6;i>0;i--)\r\n\t    \tif(aa[i]>0)\r\n\t    \t{\r\n\t    \t\tw=i;\r\n\t    \t\tbreak;\r\n\t    \t}\r\n             if(w==0)\r\n\t    \tsum=aa[0];\r\n\t    else\r\n\t    {\r\n\t   for(int s=aa[0];s>0;s--)\r\n\t   {\r\n\t\t   sum+=w+2;\r\n\t   }\r\n\t   for(int i=1;i<7;i++)\r\n\t   {\r\n\t\t   sum+=aa[i]*(i+1);\r\n\t   }\r\n        }\r\n\t   System.out.println(sum);\r\n\t}\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "272",
        "memory_consume": "10588"
    },
    {
        "submission_id": "1198483556554575872",
        "user_id": "bbe62134d8e632e5696b1487d0d580f52aba70b265d6e27344dc12fa606d3bf8",
        "create_at": "2019-11-24 14:08:38",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "102",
        "memory_consume": "12580"
    },
    {
        "submission_id": "1198483774805184512",
        "user_id": "bbe62134d8e632e5696b1487d0d580f52aba70b265d6e27344dc12fa606d3bf8",
        "create_at": "2019-11-24 14:09:30",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "\r\nimport java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "192",
        "memory_consume": "10772"
    },
    {
        "submission_id": "1198485744722972672",
        "user_id": "bbe62134d8e632e5696b1487d0d580f52aba70b265d6e27344dc12fa606d3bf8",
        "create_at": "2019-11-24 14:17:20",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = scanner.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "317",
        "memory_consume": "10844"
    },
    {
        "submission_id": "1198502769251913728",
        "user_id": "32870c1c458155c9f47081b3d562279dea35f6ec9b622cf6df361811cd7c8097",
        "create_at": "2019-11-24 15:24:59",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "104",
        "memory_consume": "12540"
    },
    {
        "submission_id": "1198505379417624576",
        "user_id": "32870c1c458155c9f47081b3d562279dea35f6ec9b622cf6df361811cd7c8097",
        "create_at": "2019-11-24 15:35:21",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "\r\nimport java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "249",
        "memory_consume": "10860"
    },
    {
        "submission_id": "1198506510545915904",
        "user_id": "f6247cdd433c48c0f332c11ec7bcc3d278855fd1f5773f9f3e4c834138e7e00c",
        "create_at": "2019-11-24 15:39:51",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}",
        "response": "ACCEPTED",
        "time_consume": "198",
        "memory_consume": "10772"
    },
    {
        "submission_id": "1198506871335751680",
        "user_id": "f6247cdd433c48c0f332c11ec7bcc3d278855fd1f5773f9f3e4c834138e7e00c",
        "create_at": "2019-11-24 15:41:17",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "136",
        "memory_consume": "12544"
    },
    {
        "submission_id": "1198506964143116288",
        "user_id": "f6247cdd433c48c0f332c11ec7bcc3d278855fd1f5773f9f3e4c834138e7e00c",
        "create_at": "2019-11-24 15:41:39",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "\r\nimport java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "234",
        "memory_consume": "11032"
    },
    {
        "submission_id": "1198507807642816512",
        "user_id": "f6247cdd433c48c0f332c11ec7bcc3d278855fd1f5773f9f3e4c834138e7e00c",
        "create_at": "2019-11-24 15:45:00",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = scanner.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "352",
        "memory_consume": "10688"
    },
    {
        "submission_id": "1198508173025415168",
        "user_id": "b64ae307174a18985e25083f352aea7a967babd80e9865ec39d4dfd6136f911e",
        "create_at": "2019-11-24 15:46:27",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.*;\r\npublic class Main{\r\n\r\n     public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sex=sc.next();\r\n        student aa=new student(name,sex,age);\r\n        System.out.println(aa.toSting());\r\n    }\r\n}\r\nclass student{\r\n\t private String name;\r\n\t private String sex;\r\n\t private int age;\r\n\t public student( String name,String sex,int age)\r\n\t {\r\n\t\t this.name=name;\r\n\t\t this.sex=sex;\r\n\t\t this.age=age;\r\n\t }\r\n\t public String toSting()\r\n\t {\r\n\t\t return \"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n\t }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "222",
        "memory_consume": "10868"
    },
    {
        "submission_id": "1198508679525371904",
        "user_id": "b64ae307174a18985e25083f352aea7a967babd80e9865ec39d4dfd6136f911e",
        "create_at": "2019-11-24 15:48:28",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\npublic class Main{\r\n\t\r\n\tpublic static void main(String []aars)\r\n\t{\r\n\t\tScanner in=new Scanner(System.in); \r\n\t\tint n=Integer.parseInt(in.nextLine());\r\n        double[]a=new double[n];\r\n        String str=in.nextLine();\r\n        String []str1=str.split(\" \");\r\n        for(int i=0;i<n;i++)\r\n        a[i]=Double.parseDouble(str1[i]);\r\n        while(true)\r\n        {     \r\n        try {\r\n        \tString ss=in.nextLine();\r\n            if(Character.isLetter(ss.charAt(0)))\r\n            { try {\r\n                System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n            } catch (Exception e1) {\r\n            } \r\n            \treturn;\r\n            }\r\n            String []s=ss.split(\" \");\r\n        \tint begin=Integer.parseInt(s[0]);\r\n        \tint end=Integer.parseInt(s[1]);\r\n        \tSystem.out.println(ArrayUtils.findMax(a, begin, end-1));\r\n        }\r\n        catch(IllegalArgumentException e)\r\n        {\r\n        \tSystem.out.println(e);\r\n        }\r\n        }\r\n        \r\n}\r\n}\r\nclass ArrayUtils{\r\npublic static double findMax(double[] arr,int begin, int end)throws IllegalArgumentException\r\n{\r\n\tif(begin>end) throw new IllegalArgumentException(\"begin:\"+begin+\" >= end:\"+(end+1));\r\n\tif(begin<0)  throw new IllegalArgumentException(\"begin:\"+begin+\" < 0\");\r\n\tif(end>=arr.length) throw new IllegalArgumentException(\"end:\"+(end+1)+\" > arr.length\");\r\n\tdouble temp=0;\r\n\tfor(int i=begin;i<end+1;i++)\r\n\t{\r\n\t\tif(arr[i]>temp)\r\n\t\t\ttemp=arr[i];\r\n\t}\r\n\treturn temp;\r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "107",
        "memory_consume": "10844"
    },
    {
        "submission_id": "1198508834056114176",
        "user_id": "b64ae307174a18985e25083f352aea7a967babd80e9865ec39d4dfd6136f911e",
        "create_at": "2019-11-24 15:49:05",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner in = new Scanner(System.in);\r\n        int n= in.nextInt();\r\n        int jige=0,no=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n        \tint temp=in.nextInt();\r\n        \tif(temp>100||temp<0)\r\n        \t{\r\n        \t\tSystem.out.println(temp+\"invalid!\");\r\n        \t\ti--;\r\n        \t}\r\n        \telse\r\n        \t{\r\n        \t\tif(temp>=60)\r\n        \t\t\tjige++;\r\n        \t\telse\r\n        \t\t\tno++;\r\n        \t}\r\n        }\r\n        System.out.println(jige+\"\\n\"+no);\r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "190",
        "memory_consume": "10924"
    },
    {
        "submission_id": "1198509732576694272",
        "user_id": "b64ae307174a18985e25083f352aea7a967babd80e9865ec39d4dfd6136f911e",
        "create_at": "2019-11-24 15:52:39",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\npublic class Main{\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner in= new Scanner(System.in);\r\n\t    int []aa=new int[7];\r\n\t    for(int i=0;i<7;i++)\r\n\t    \taa[i]=in.nextInt();\r\n\t    int w=0,sum=0;\r\n\t    for(int i=6;i>0;i--)\r\n\t    \tif(aa[i]>0)\r\n\t    \t{\r\n\t    \t\tw=i;\r\n\t    \t\tbreak;\r\n\t    \t}\r\n             if(w==0)\r\n\t    \tsum=aa[0];\r\n\t    else\r\n\t    {\r\n\t   for(int s=aa[0];s>0;s--)\r\n\t   {\r\n\t\t   sum+=w+2;\r\n\t   }\r\n\t   for(int i=1;i<7;i++)\r\n\t   {\r\n\t\t   sum+=aa[i]*(i+1);\r\n\t   }\r\n        }\r\n\t   System.out.println(sum);\r\n\t}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "319",
        "memory_consume": "10756"
    },
    {
        "submission_id": "1198515375534575616",
        "user_id": "32870c1c458155c9f47081b3d562279dea35f6ec9b622cf6df361811cd7c8097",
        "create_at": "2019-11-24 16:15:04",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int [] balls = new int[7];\r\n        for (int i = 0;i < balls.length;i++) {\r\n            balls[i] = scanner.nextInt();\r\n        }\r\n        final int [] scores = {1, 2, 3, 4, 5, 6, 7};\r\n        int index = 0;\r\n        for (int i = 0;i < balls.length;i++) {\r\n            if (balls[i] != 0) {\r\n                index = i;\r\n            }\r\n        }\r\n        int score = (index != 0) ? balls[0] * (scores[0] + scores[index]) : balls[0]; \r\n\r\n        for (int i = 1;i < 7;i++) {\r\n            score += balls[i] * scores[i];\r\n        }\r\n        System.out.println(score);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "292",
        "memory_consume": "10712"
    },
    {
        "submission_id": "1198515549837266944",
        "user_id": "ccc3b36e00523a38bc623bdc5d70b7ba6c805aabe5f984ef060668e16c6ec908",
        "create_at": "2019-11-24 16:15:46",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n",
        "response": "ACCEPTED",
        "time_consume": "244",
        "memory_consume": "11000"
    },
    {
        "submission_id": "1198515980474847232",
        "user_id": "bb87ab6e077bbba90d48e7f7b8dde30d2f54faf17abe464f6ab0fc6060281e59",
        "create_at": "2019-11-24 16:17:29",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.*;\r\npublic class Main{\r\n\r\n     public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sex=sc.next();\r\n        student aa=new student(name,sex,age);\r\n        System.out.println(aa.toSting());\r\n    }\r\n}\r\nclass student{\r\n\t private String name;\r\n\t private String sex;\r\n\t private int age;\r\n\t public student( String name,String sex,int age)\r\n\t {\r\n\t\t this.name=name;\r\n\t\t this.sex=sex;\r\n\t\t this.age=age;\r\n\t }\r\n\t public String toSting()\r\n\t {\r\n\t\t return \"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n\t }\r\n}",
        "response": "ACCEPTED",
        "time_consume": "240",
        "memory_consume": "10776"
    },
    {
        "submission_id": "1198516387972452352",
        "user_id": "bb87ab6e077bbba90d48e7f7b8dde30d2f54faf17abe464f6ab0fc6060281e59",
        "create_at": "2019-11-24 16:19:06",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\npublic class Main{\r\n\t\r\n\tpublic static void main(String []aars)\r\n\t{\r\n\t\tScanner in=new Scanner(System.in); \r\n\t\tint n=Integer.parseInt(in.nextLine());\r\n        double[]a=new double[n];\r\n        String str=in.nextLine();\r\n        String []str1=str.split(\" \");\r\n        for(int i=0;i<n;i++)\r\n        a[i]=Double.parseDouble(str1[i]);\r\n        while(true)\r\n        {     \r\n        try {\r\n        \tString ss=in.nextLine();\r\n            if(Character.isLetter(ss.charAt(0)))\r\n            { try {\r\n                System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n            } catch (Exception e1) {\r\n            } \r\n            \treturn;\r\n            }\r\n            String []s=ss.split(\" \");\r\n        \tint begin=Integer.parseInt(s[0]);\r\n        \tint end=Integer.parseInt(s[1]);\r\n        \tSystem.out.println(ArrayUtils.findMax(a, begin, end-1));\r\n        }\r\n        catch(IllegalArgumentException e)\r\n        {\r\n        \tSystem.out.println(e);\r\n        }\r\n        }\r\n        \r\n}\r\n}\r\nclass ArrayUtils{\r\npublic static double findMax(double[] arr,int begin, int end)throws IllegalArgumentException\r\n{\r\n\tif(begin>end) throw new IllegalArgumentException(\"begin:\"+begin+\" >= end:\"+(end+1));\r\n\tif(begin<0)  throw new IllegalArgumentException(\"begin:\"+begin+\" < 0\");\r\n\tif(end>=arr.length) throw new IllegalArgumentException(\"end:\"+(end+1)+\" > arr.length\");\r\n\tdouble temp=0;\r\n\tfor(int i=begin;i<end+1;i++)\r\n\t{\r\n\t\tif(arr[i]>temp)\r\n\t\t\ttemp=arr[i];\r\n\t}\r\n\treturn temp;\r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "106",
        "memory_consume": "11096"
    },
    {
        "submission_id": "1198516511574396928",
        "user_id": "bb87ab6e077bbba90d48e7f7b8dde30d2f54faf17abe464f6ab0fc6060281e59",
        "create_at": "2019-11-24 16:19:35",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner in = new Scanner(System.in);\r\n        int n= in.nextInt();\r\n        int jige=0,no=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n        \tint temp=in.nextInt();\r\n        \tif(temp>100||temp<0)\r\n        \t{\r\n        \t\tSystem.out.println(temp+\"invalid!\");\r\n        \t\ti--;\r\n        \t}\r\n        \telse\r\n        \t{\r\n        \t\tif(temp>=60)\r\n        \t\t\tjige++;\r\n        \t\telse\r\n        \t\t\tno++;\r\n        \t}\r\n        }\r\n        System.out.println(jige+\"\\n\"+no);\r\n}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "217",
        "memory_consume": "10720"
    },
    {
        "submission_id": "1198516550510120960",
        "user_id": "a6c9a9f379790af0f5ccef85c9889f0772886ac82902ec2ae78804fb9f28f375",
        "create_at": "2019-11-24 16:19:44",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189363854892777472",
        "problem_id": "6170",
        "skill_id": "216",
        "code": "import java.util.Scanner;\r\n \r\nclass Student{\r\n    private String name;\r\n    private String sex;\r\n    private int age;\r\n \r\n    @Override\r\n    public String toString() {\r\n        String str=\"Student [name='\"+name+\"', sex='\"+sex+\"', age=\"+age+\"]\";\r\n        return str;\r\n    }\r\n \r\n    public Student(String name, String sex, int age) {\r\n        this.name = name;\r\n        this.sex = sex;\r\n        this.age = age;\r\n    }\r\n \r\n    public Student() {\r\n    }\r\n \r\n    public String getName() {\r\n        return name;\r\n    }\r\n \r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n \r\n    public String getSex() {\r\n        return sex;\r\n    }\r\n \r\n    public void setSex(String sex) {\r\n        this.sex = sex;\r\n    }\r\n \r\n    public int getAge() {\r\n        return age;\r\n    }\r\n \r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n}\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        String name=sc.next();\r\n        int age=sc.nextInt();\r\n        String sx=sc.next();\r\n        Student student = new Student(name, sx, age);\r\n        System.out.println(student);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "response": "ACCEPTED",
        "time_consume": "215",
        "memory_consume": "10840"
    },
    {
        "submission_id": "1198516851162025984",
        "user_id": "ccc3b36e00523a38bc623bdc5d70b7ba6c805aabe5f984ef060668e16c6ec908",
        "create_at": "2019-11-24 16:20:56",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n\r\n\r\n",
        "response": "ACCEPTED",
        "time_consume": "139",
        "memory_consume": "12712"
    },
    {
        "submission_id": "1198517019773046784",
        "user_id": "ccc3b36e00523a38bc623bdc5d70b7ba6c805aabe5f984ef060668e16c6ec908",
        "create_at": "2019-11-24 16:21:36",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}\r\n\r\n",
        "response": "ACCEPTED",
        "time_consume": "217",
        "memory_consume": "10680"
    },
    {
        "submission_id": "1198517055869227008",
        "user_id": "bb87ab6e077bbba90d48e7f7b8dde30d2f54faf17abe464f6ab0fc6060281e59",
        "create_at": "2019-11-24 16:21:45",
        "language": "Java",
        "score": "5.0",
        "problem_set_problem_id": "1189364239560785920",
        "problem_id": "931692648548974592",
        "skill_id": "201",
        "code": "import java.util.*;\r\npublic class Main{\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner in= new Scanner(System.in);\r\n\t    int []aa=new int[7];\r\n\t    for(int i=0;i<7;i++)\r\n\t    \taa[i]=in.nextInt();\r\n\t    int w=0,sum=0;\r\n\t    for(int i=6;i>0;i--)\r\n\t    \tif(aa[i]>0)\r\n\t    \t{\r\n\t    \t\tw=i;\r\n\t    \t\tbreak;\r\n\t    \t}\r\n             if(w==0)\r\n\t    \tsum=aa[0];\r\n\t    else\r\n\t    {\r\n\t   for(int s=aa[0];s>0;s--)\r\n\t   {\r\n\t\t   sum+=w+2;\r\n\t   }\r\n\t   for(int i=1;i<7;i++)\r\n\t   {\r\n\t\t   sum+=aa[i]*(i+1);\r\n\t   }\r\n        }\r\n\t   System.out.println(sum);\r\n\t}\r\n}",
        "response": "ACCEPTED",
        "time_consume": "335",
        "memory_consume": "10776"
    },
    {
        "submission_id": "1198517716971229184",
        "user_id": "a6c9a9f379790af0f5ccef85c9889f0772886ac82902ec2ae78804fb9f28f375",
        "create_at": "2019-11-24 16:24:23",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006537846784",
        "problem_id": "4996",
        "skill_id": "233",
        "code": "import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args) {\r\n        Scanner reader = new Scanner(System.in);\r\n        int n = reader.nextInt();\r\n        double [] array = new double[n];\r\n        for (int i = 0;i < n;i++) {\r\n            array[i] = reader.nextDouble();\r\n        }\r\n        while (!reader.hasNext(\"end\")) {\r\n            int begin = reader.nextInt();\r\n            int end = reader.nextInt();\r\n            try {\r\n                System.out.println(ArrayUtils.findMax(array,begin,end));\r\n            } catch (IllegalArgumentException e) {\r\n                System.out.println(e);\r\n            }\r\n        }\r\n        try {\r\n            System.out.println(ArrayUtils.class.getDeclaredMethod(\"findMax\", double[].class,int.class,int.class));\r\n        } catch (Exception e1) {\r\n            System.out.println(e1);\r\n        }\r\n        reader.close();\r\n    }\r\n\r\n}\r\n\r\nclass ArrayUtils{\r\n    public static double findMax(double[] arr,int begin, int end) throws IllegalArgumentException{\r\n        if (begin < 0) {\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" < 0\");\r\n        } else if (begin >= end){\r\n            throw new IllegalArgumentException(\"begin:\" + begin + \" >= \" + \"end:\" + end);\r\n        } else if (end > arr.length) {\r\n            throw new IllegalArgumentException(\"end:\" + end + \" > arr.length\");\r\n        }\r\n        double max = Double.MIN_VALUE;\r\n        for (int i = begin; i < end;i++) {\r\n            if (arr[i] >= max) {\r\n                max = arr[i];\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\n\r\n",
        "response": "ACCEPTED",
        "time_consume": "110",
        "memory_consume": "12712"
    },
    {
        "submission_id": "1198517935238615040",
        "user_id": "a6c9a9f379790af0f5ccef85c9889f0772886ac82902ec2ae78804fb9f28f375",
        "create_at": "2019-11-24 16:25:15",
        "language": "Java",
        "score": "10.0",
        "problem_set_problem_id": "1189364006567206912",
        "problem_id": "943071492088131584",
        "skill_id": "231",
        "code": "import java.util.Scanner;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc=new Scanner(System.in);\r\n        int count=sc.nextInt();\r\n        int pass=0;\r\n        for (int i=0;i<count;i++){\r\n            int grade=sc.nextInt();\r\n            if (grade<0||grade>100){\r\n                System.out.println(grade+\"invalid!\");\r\n            }else if (grade>=60){\r\n                pass++;\r\n            }\r\n        }\r\n        System.out.println(pass);\r\n        System.out.println(count-pass);\r\n    \r\n}\r\n}\r\n",
        "response": "ACCEPTED",
        "time_consume": "195",
        "memory_consume": "10836"
    }
]